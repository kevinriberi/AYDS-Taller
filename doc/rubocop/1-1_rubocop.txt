Inspecting 56 files
C....C.CCC...CC.....C.C.C...C....CCCCCCCC.CCCCCCCCCCCCC.

Offenses:

Gemfile:10:33: C: Style/HashSyntax: Use hash rockets syntax.
    gem 'rubocop', '~> 0.91.0', require: false
                                ^^^^^^^^
Gemfile:17:30: C: Style/HashSyntax: Use hash rockets syntax.
   github 'sinatra/sinatra', branch: 'main' do
                             ^^^^^^^
controllers/answer_controller.rb:12:35: C: Style/HashSyntax: Use hash rockets syntax.
    knowledge = Knowledge.find_by(user_id: user_id, topic_id: question.topic_id)
                                  ^^^^^^^^
controllers/answer_controller.rb:12:53: C: Style/HashSyntax: Use hash rockets syntax.
    knowledge = Knowledge.find_by(user_id: user_id, topic_id: question.topic_id)
                                                    ^^^^^^^^^
controllers/answer_controller.rb:20:28: C: Style/HashSyntax: Use hash rockets syntax.
    answer = Answer.create(user_id: user_id, question_id: question_id, option_id: option_id, time: time, points: points )
                           ^^^^^^^^
controllers/answer_controller.rb:20:46: C: Style/HashSyntax: Use hash rockets syntax.
    answer = Answer.create(user_id: user_id, question_id: question_id, option_id: option_id, time: time, points: points )
                                             ^^^^^^^^^^^^
controllers/answer_controller.rb:20:72: C: Style/HashSyntax: Use hash rockets syntax.
    answer = Answer.create(user_id: user_id, question_id: question_id, option_id: option_id, time: time, points: points )
                                                                       ^^^^^^^^^^
controllers/answer_controller.rb:20:94: C: Style/HashSyntax: Use hash rockets syntax.
    answer = Answer.create(user_id: user_id, question_id: question_id, option_id: option_id, time: time, points: points )
                                                                                             ^^^^^
controllers/answer_controller.rb:20:106: C: Style/HashSyntax: Use hash rockets syntax.
    answer = Answer.create(user_id: user_id, question_id: question_id, option_id: option_id, time: time, points: points )
                                                                                                         ^^^^^^^
controllers/answer_controller.rb:52:32: C: Style/HashSyntax: Use hash rockets syntax.
    @respuestas = Answer.where(user_id: user_id, created_at: @date.beginning_of_day..@date.end_of_day)
                               ^^^^^^^^
controllers/answer_controller.rb:52:50: C: Style/HashSyntax: Use hash rockets syntax.
    @respuestas = Answer.where(user_id: user_id, created_at: @date.beginning_of_day..@date.end_of_day)
                                                 ^^^^^^^^^^^
controllers/question_controller.rb:9:25: C: Style/HashSyntax: Use hash rockets syntax.
    if Question.find_by(id: question_id)
                        ^^^
controllers/topic_controller.rb:10:22: C: Style/HashSyntax: Use hash rockets syntax.
    if Topic.find_by(id: topic_id)
                     ^^^
controllers/topic_controller.rb:12:37: C: Style/HashSyntax: Use hash rockets syntax.
      user_info = Knowledge.find_by(user: user, topic_id: topic_id)
                                    ^^^^^
controllers/topic_controller.rb:12:49: C: Style/HashSyntax: Use hash rockets syntax.
      user_info = Knowledge.find_by(user: user, topic_id: topic_id)
                                                ^^^^^^^^^
controllers/topic_controller.rb:27:60: C: Style/HashSyntax: Use hash rockets syntax.
    answered_questions = user.answers.joins(:option).where(options: { correct: true }).pluck(:question_id)
                                                           ^^^^^^^^
controllers/topic_controller.rb:27:71: C: Style/HashSyntax: Use hash rockets syntax.
    answered_questions = user.answers.joins(:option).where(options: { correct: true }).pluck(:question_id)
                                                                      ^^^^^^^^
controllers/topic_controller.rb:28:20: C: Style/HashSyntax: Use hash rockets syntax.
    Question.where(topic_id: topic_id, level: level).where.not(id: answered_questions).order("RANDOM()")
                   ^^^^^^^^^
controllers/topic_controller.rb:28:40: C: Style/HashSyntax: Use hash rockets syntax.
    Question.where(topic_id: topic_id, level: level).where.not(id: answered_questions).order("RANDOM()")
                                       ^^^^^^
controllers/topic_controller.rb:28:64: C: Style/HashSyntax: Use hash rockets syntax.
    Question.where(topic_id: topic_id, level: level).where.not(id: answered_questions).order("RANDOM()")
                                                               ^^^
controllers/user_controller.rb:11:26: C: Style/HashSyntax: Use hash rockets syntax.
    @user = User.find_by(username: params[:username])
                         ^^^^^^^^^
controllers/user_controller.rb:38:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: params[:username], email: params[:email], password: params[:password])
                         ^^^^^^^^^
controllers/user_controller.rb:38:55: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: params[:username], email: params[:email], password: params[:password])
                                                      ^^^^^^
controllers/user_controller.rb:38:78: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: params[:username], email: params[:email], password: params[:password])
                                                                             ^^^^^^^^^
controllers/user_controller.rb:52:34: C: Style/HashSyntax: Use hash rockets syntax.
      users_ordered = User.order(points: :desc)
                                 ^^^^^^^
controllers/user_controller.rb:56:39: C: Style/HashSyntax: Use hash rockets syntax.
      @users = users_ordered.paginate(page: page, per_page: per_page)
                                      ^^^^^
controllers/user_controller.rb:56:51: C: Style/HashSyntax: Use hash rockets syntax.
      @users = users_ordered.paginate(page: page, per_page: per_page)
                                                  ^^^^^^^^^
controllers/user_controller.rb:60:27: C: Style/HashSyntax: Use hash rockets syntax.
      @users = User.order(points: :desc).paginate(page: params[:page], per_page: 10)
                          ^^^^^^^
controllers/user_controller.rb:60:51: C: Style/HashSyntax: Use hash rockets syntax.
      @users = User.order(points: :desc).paginate(page: params[:page], per_page: 10)
                                                  ^^^^^
controllers/user_controller.rb:60:72: C: Style/HashSyntax: Use hash rockets syntax.
      @users = User.order(points: :desc).paginate(page: params[:page], per_page: 10)
                                                                       ^^^^^^^^^
controllers/user_controller.rb:98:29: C: Style/HashSyntax: Use hash rockets syntax.
        @datos_grafico << { fecha: fecha.to_date, puntaje: respuesta[1] }
                            ^^^^^^
controllers/user_controller.rb:98:51: C: Style/HashSyntax: Use hash rockets syntax.
        @datos_grafico << { fecha: fecha.to_date, puntaje: respuesta[1] }
                                                  ^^^^^^^^
controllers/user_controller.rb:100:29: C: Style/HashSyntax: Use hash rockets syntax.
        @datos_grafico << { fecha: fecha.to_date, puntaje: 0 }
                            ^^^^^^
controllers/user_controller.rb:100:51: C: Style/HashSyntax: Use hash rockets syntax.
        @datos_grafico << { fecha: fecha.to_date, puntaje: 0 }
                                                  ^^^^^^^^
db/migrate/20230511201800_create_tables.rb:6:30: C: Style/HashSyntax: Use hash rockets syntax.
        t.references :topic, foreign_key: true
                             ^^^^^^^^^^^^
db/migrate/20230511213300_create_answers.rb:5:33: C: Style/HashSyntax: Use hash rockets syntax.
        t.references :question, foreign_key: true
                                ^^^^^^^^^^^^
db/migrate/20230514222710_create_answer_again.rb:4:27: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :user, null: false, foreign_key: true
                          ^^^^^
db/migrate/20230514222710_create_answer_again.rb:4:40: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :user, null: false, foreign_key: true
                                       ^^^^^^^^^^^^
db/migrate/20230514222710_create_answer_again.rb:5:31: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :question, null: false, foreign_key: true
                              ^^^^^
db/migrate/20230514222710_create_answer_again.rb:5:44: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :question, null: false, foreign_key: true
                                           ^^^^^^^^^^^^
db/migrate/20230514222710_create_answer_again.rb:6:29: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :option, null: false, foreign_key: true
                            ^^^^^
db/migrate/20230514222710_create_answer_again.rb:6:42: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :option, null: false, foreign_key: true
                                         ^^^^^^^^^^^^
db/migrate/20230524211814_create_user_topic_infos.rb:4:27: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :user, null: false, foreign_key: true
                          ^^^^^
db/migrate/20230524211814_create_user_topic_infos.rb:4:40: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :user, null: false, foreign_key: true
                                       ^^^^^^^^^^^^
db/migrate/20230524211814_create_user_topic_infos.rb:5:28: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :topic, null: false, foreign_key: true
                           ^^^^^
db/migrate/20230524211814_create_user_topic_infos.rb:5:41: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :topic, null: false, foreign_key: true
                                        ^^^^^^^^^^^^
db/migrate/20230609024446_add_value_0_by_default_to_points.rb:3:44: C: Style/HashSyntax: Use hash rockets syntax.
    change_column_default :users, :points, from: nil, to: 0
                                           ^^^^^
db/migrate/20230609024446_add_value_0_by_default_to_points.rb:3:55: C: Style/HashSyntax: Use hash rockets syntax.
    change_column_default :users, :points, from: nil, to: 0
                                                      ^^^
db/migrate/20230609101720_create_table_knowledges.rb:4:27: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :user, foreign_key: true
                          ^^^^^^^^^^^^
db/migrate/20230609101720_create_table_knowledges.rb:5:28: C: Style/HashSyntax: Use hash rockets syntax.
      t.references :topic, foreign_key: true
                           ^^^^^^^^^^^^
db/migrate/20230614030529_correct_some_tables.rb:4:46: C: Style/HashSyntax: Use hash rockets syntax.
    add_column :options, :correct, :boolean, default: false
                                             ^^^^^^^^
db/migrate/20230919180903_add_time_to_answers.rb:3:41: C: Style/HashSyntax: Use hash rockets syntax.
    add_column :answers, :time, :float, default: 0
                                        ^^^^^^^^
db/migrate/20230920000446_change_column_type_in_users.rb:3:44: C: Style/HashSyntax: Use hash rockets syntax.
    change_column :users, :points, :float, default: 0
                                           ^^^^^^^^
db/migrate/20230920002542_change_data_type_of_points_in_users.rb:3:46: C: Style/HashSyntax: Use hash rockets syntax.
    change_column :users, :points, :integer, default: 0
                                             ^^^^^^^^
db/migrate/20230920002820_change_data_type_of_time_in_answers.rb:3:46: C: Style/HashSyntax: Use hash rockets syntax.
    change_column :answers, :time, :integer, default: 0
                                             ^^^^^^^^
db/schema.rb:13:34: C: Style/HashSyntax: Use hash rockets syntax.
ActiveRecord::Schema[7.0].define(version: 2023_10_06_121545) do
                                 ^^^^^^^^
db/schema.rb:13:43: C: Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema[7.0].define(version: 2023_10_06_121545) do
                                          ^^^^^^^^^^^^^^^^^
db/schema.rb:14:27: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "answers", force: :cascade do |t|
                          ^^^^^^
db/schema.rb:15:26: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "user_id", null: false
                         ^^^^^
db/schema.rb:16:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "question_id", null: false
                             ^^^^^
db/schema.rb:17:28: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "option_id", null: false
                           ^^^^^
db/schema.rb:18:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:19:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:20:23: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "time", default: 0
                      ^^^^^^^^
db/schema.rb:21:25: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "points", default: 0
                        ^^^^^^^^
db/schema.rb:22:28: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["option_id"], name: "index_answers_on_option_id"
                           ^^^^^
db/schema.rb:23:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["question_id"], name: "index_answers_on_question_id"
                             ^^^^^
db/schema.rb:24:26: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["user_id"], name: "index_answers_on_user_id"
                         ^^^^^
db/schema.rb:27:30: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "knowledges", force: :cascade do |t|
                             ^^^^^^
db/schema.rb:32:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:33:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:34:27: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["topic_id"], name: "index_knowledges_on_topic_id"
                          ^^^^^
db/schema.rb:35:26: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["user_id"], name: "index_knowledges_on_user_id"
                         ^^^^^
db/schema.rb:38:27: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "options", force: :cascade do |t|
                          ^^^^^^
db/schema.rb:41:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:42:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:43:26: C: Style/HashSyntax: Use hash rockets syntax.
    t.boolean "correct", default: false
                         ^^^^^^^^
db/schema.rb:44:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["question_id"], name: "index_options_on_question_id"
                             ^^^^^
db/schema.rb:47:29: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "questions", force: :cascade do |t|
                            ^^^^^^
db/schema.rb:50:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:51:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:53:27: C: Style/HashSyntax: Use hash rockets syntax.
    t.index ["topic_id"], name: "index_questions_on_topic_id"
                          ^^^^^
db/schema.rb:56:26: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "topics", force: :cascade do |t|
                         ^^^^^^
db/schema.rb:58:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:59:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:65:25: C: Style/HashSyntax: Use hash rockets syntax.
  create_table "users", force: :cascade do |t|
                        ^^^^^^
db/schema.rb:67:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "created_at", null: false
                             ^^^^^
db/schema.rb:68:30: C: Style/HashSyntax: Use hash rockets syntax.
    t.datetime "updated_at", null: false
                             ^^^^^
db/schema.rb:70:25: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "points", default: 0
                        ^^^^^^^^
db/schema.rb:72:25: C: Style/HashSyntax: Use hash rockets syntax.
    t.integer "streak", default: 0
                        ^^^^^^^^
db/seeds.rb:10:23: C: Style/HashSyntax: Use hash rockets syntax.
topic1 = Topic.create(name: "Secuencial", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3) 
                      ^^^^^
db/seeds.rb:10:43: C: Style/HashSyntax: Use hash rockets syntax.
topic1 = Topic.create(name: "Secuencial", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3) 
                                          ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:67: C: Style/HashSyntax: Use hash rockets syntax.
topic1 = Topic.create(name: "Secuencial", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3) 
                                                                  ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:10:91: C: Style/HashSyntax: Use hash rockets syntax.
topic1 = Topic.create(name: "Secuencial", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3) 
                                                                                          ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:23: C: Style/HashSyntax: Use hash rockets syntax.
topic2 = Topic.create(name: "Condicional", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                      ^^^^^
db/seeds.rb:11:44: C: Style/HashSyntax: Use hash rockets syntax.
topic2 = Topic.create(name: "Condicional", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                           ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:68: C: Style/HashSyntax: Use hash rockets syntax.
topic2 = Topic.create(name: "Condicional", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                   ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:11:92: C: Style/HashSyntax: Use hash rockets syntax.
topic2 = Topic.create(name: "Condicional", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                           ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:12:23: C: Style/HashSyntax: Use hash rockets syntax.
topic3 = Topic.create(name: "Ciclos", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                      ^^^^^
db/seeds.rb:12:39: C: Style/HashSyntax: Use hash rockets syntax.
topic3 = Topic.create(name: "Ciclos", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                      ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:12:63: C: Style/HashSyntax: Use hash rockets syntax.
topic3 = Topic.create(name: "Ciclos", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                              ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:12:87: C: Style/HashSyntax: Use hash rockets syntax.
topic3 = Topic.create(name: "Ciclos", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                      ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:23: C: Style/HashSyntax: Use hash rockets syntax.
topic4 = Topic.create(name: "Funciones", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                      ^^^^^
db/seeds.rb:13:42: C: Style/HashSyntax: Use hash rockets syntax.
topic4 = Topic.create(name: "Funciones", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                         ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:66: C: Style/HashSyntax: Use hash rockets syntax.
topic4 = Topic.create(name: "Funciones", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                 ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:13:90: C: Style/HashSyntax: Use hash rockets syntax.
topic4 = Topic.create(name: "Funciones", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                         ^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:21:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un algoritmo?", topic_id: topic1.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:21:62: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un algoritmo?", topic_id: topic1.id, level: 1)
                                                             ^^^^^^^^^
db/seeds.rb:21:83: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un algoritmo?", topic_id: topic1.id, level: 1)
                                                                                  ^^^^^^
db/seeds.rb:22:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un error en un programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:22:62: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un error en un programa.", question_id: question.id)
                                                             ^^^^^^^^^^^^
db/seeds.rb:23:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una secuencia de instrucciones para resolver un problema.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:23:95: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una secuencia de instrucciones para resolver un problema.", question_id: question.id)
                                                                                              ^^^^^^^^^^^^
db/seeds.rb:24:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable en un programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:24:66: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable en un programa.", question_id: question.id)
                                                                 ^^^^^^^^^^^^
db/seeds.rb:26:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:30:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la asignación de variables en programación?", topic_id: topic1.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:30:92: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la asignación de variables en programación?", topic_id: topic1.id, level: 1)
                                                                                           ^^^^^^^^^
db/seeds.rb:30:113: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la asignación de variables en programación?", topic_id: topic1.id, level: 1)
                                                                                                                ^^^^^^
db/seeds.rb:31:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Declarar una variable sin asignarle un valor.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:31:83: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Declarar una variable sin asignarle un valor.", question_id: question.id)
                                                                                  ^^^^^^^^^^^^
db/seeds.rb:32:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Asignar un valor a una variable.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:32:70: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Asignar un valor a una variable.", question_id: question.id)
                                                                     ^^^^^^^^^^^^
db/seeds.rb:33:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Definir el tipo de una variable.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:33:70: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Definir el tipo de una variable.", question_id: question.id)
                                                                     ^^^^^^^^^^^^
db/seeds.rb:35:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:39:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una constante en programación?", topic_id: topic1.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:39:79: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una constante en programación?", topic_id: topic1.id, level: 1)
                                                                              ^^^^^^^^^
db/seeds.rb:39:100: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una constante en programación?", topic_id: topic1.id, level: 1)
                                                                                                   ^^^^^^
db/seeds.rb:40:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable cuyo valor puede cambiar durante la ejecución del programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:40:110: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable cuyo valor puede cambiar durante la ejecución del programa.", question_id: question.id)
                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:41:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un valor que se asigna a una variable y no puede cambiar durante la ejecución del programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:41:129: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un valor que se asigna a una variable y no puede cambiar durante la ejecución del programa.", question_id: question.id)
                                                                                                                                ^^^^^^^^^^^^
db/seeds.rb:42:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un tipo de dato utilizado para almacenar números enteros.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:42:95: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un tipo de dato utilizado para almacenar números enteros.", question_id: question.id)
                                                                                              ^^^^^^^^^^^^
db/seeds.rb:44:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:49:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre una variable local y una variable global?", topic_id: topic1.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:49:111: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre una variable local y una variable global?", topic_id: topic1.id, level: 2)
                                                                                                              ^^^^^^^^^
db/seeds.rb:49:132: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre una variable local y una variable global?", topic_id: topic1.id, level: 2)
                                                                                                                                   ^^^^^^
db/seeds.rb:50:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable local es accesible desde cualquier parte del programa, mientras que una variable global solo es accesible dentro de una función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:50:179: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable local es accesible desde cualquier parte del programa, mientras que una variable global solo es accesible dentro de una función.", question_id: question.id)
                                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:51:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Las variables locales y globales son términos que se utilizan indistintamente y no tienen diferencias en su alcance.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:51:154: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Las variables locales y globales son términos que se utilizan indistintamente y no tienen diferencias en su alcance.", question_id: question.id)
                                                                                                                                                         ^^^^^^^^^^^^
db/seeds.rb:52:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable local solo es accesible dentro de una función, mientras que una variable global es accesible desde cualquier parte del programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:52:179: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable local solo es accesible dentro de una función, mientras que una variable global es accesible desde cualquier parte del programa.", question_id: question.id)
                                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:54:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:58:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el ámbito de una variable en programación?", topic_id: topic1.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:58:91: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el ámbito de una variable en programación?", topic_id: topic1.id, level: 2)
                                                                                          ^^^^^^^^^
db/seeds.rb:58:112: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el ámbito de una variable en programación?", topic_id: topic1.id, level: 2)
                                                                                                               ^^^^^^
db/seeds.rb:59:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La vida útil de una variable durante la ejecución del programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:59:101: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La vida útil de una variable durante la ejecución del programa.", question_id: question.id)
                                                                                                    ^^^^^^^^^^^^
db/seeds.rb:60:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La región del programa donde una variable es accesible.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:60:93: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La región del programa donde una variable es accesible.", question_id: question.id)
                                                                                            ^^^^^^^^^^^^
db/seeds.rb:61:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El tipo de dato que se asigna a una variable.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:61:83: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El tipo de dato que se asigna a una variable.", question_id: question.id)
                                                                                  ^^^^^^^^^^^^
db/seeds.rb:63:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:67:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si un valor es mayor o igual que otro en una condición?", topic_id: topic1.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:67:157: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si un valor es mayor o igual que otro en una condición?", topic_id: topic1.id, level: 2)
                                                                                                                                                            ^^^^^^^^^
db/seeds.rb:67:178: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si un valor es mayor o igual que otro en una condición?", topic_id: topic1.id, level: 2)
                                                                                                                                                                                 ^^^^^^
db/seeds.rb:68:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: ">=", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:68:40: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: ">=", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:69:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "<", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:69:39: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "<", question_id: question.id)
                                      ^^^^^^^^^^^^
db/seeds.rb:70:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "<=", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:70:40: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "<=", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:72:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:77:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿A qué nos referimos con asignación múltiple?", topic_id: topic1.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:77:86: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿A qué nos referimos con asignación múltiple?", topic_id: topic1.id, level: 3)
                                                                                     ^^^^^^^^^
db/seeds.rb:77:107: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿A qué nos referimos con asignación múltiple?", topic_id: topic1.id, level: 3)
                                                                                                          ^^^^^^
db/seeds.rb:78:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La asignación múltiple es cuando se asigna el mismo valor a varias variables en una sola instrucción.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:78:139: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La asignación múltiple es cuando se asigna el mismo valor a varias variables en una sola instrucción.", question_id: question.id)
                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:79:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La asignación múltiple es la capacidad de asignar diferentes valores a diferentes variables en una sola instrucción.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:79:154: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La asignación múltiple es la capacidad de asignar diferentes valores a diferentes variables en una sola instrucción.", question_id: question.id)
                                                                                                                                                         ^^^^^^^^^^^^
db/seeds.rb:80:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "La asignación múltiple no es una práctica común en programación.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:80:102: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "La asignación múltiple no es una práctica común en programación.", question_id: question.id)
                                                                                                     ^^^^^^^^^^^^
db/seeds.rb:82:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:86:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué hace el operador de concatenación de cadenas?", topic_id: topic1.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:86:108: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué hace el operador de concatenación de cadenas?", topic_id: topic1.id, level: 3)
                                                                                                           ^^^^^^^^^
db/seeds.rb:86:129: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué hace el operador de concatenación de cadenas?", topic_id: topic1.id, level: 3)
                                                                                                                                ^^^^^^
db/seeds.rb:87:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Combina dos cadenas en una sola.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:87:70: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Combina dos cadenas en una sola.", question_id: question.id)
                                                                     ^^^^^^^^^^^^
db/seeds.rb:88:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Divide una cadena en múltiples subcadenas.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:88:80: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Divide una cadena en múltiples subcadenas.", question_id: question.id)
                                                                               ^^^^^^^^^^^^
db/seeds.rb:89:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Compara dos cadenas y devuelve un valor booleano.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:89:87: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Compara dos cadenas y devuelve un valor booleano.", question_id: question.id)
                                                                                      ^^^^^^^^^^^^
db/seeds.rb:91:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:95:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes opciones es un ejemplo de una función de salida en programación?", topic_id: topic1.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:95:129: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes opciones es un ejemplo de una función de salida en programación?", topic_id: topic1.id, level: 3)
                                                                                                                                ^^^^^^^^^
db/seeds.rb:95:150: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes opciones es un ejemplo de una función de salida en programación?", topic_id: topic1.id, level: 3)
                                                                                                                                                     ^^^^^^
db/seeds.rb:96:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "scanf()", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:96:45: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "scanf()", question_id: question.id)
                                            ^^^^^^^^^^^^
db/seeds.rb:97:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "sqrt()", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:97:44: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "sqrt()", question_id: question.id)
                                           ^^^^^^^^^^^^
db/seeds.rb:98:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "printf()", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:98:46: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "printf()", question_id: question.id)
                                             ^^^^^^^^^^^^
db/seeds.rb:100:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:107:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if-else?", topic_id: topic2.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:107:73: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if-else?", topic_id: topic2.id, level: 1)
                                                                        ^^^^^^^^^
db/seeds.rb:107:94: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if-else?", topic_id: topic2.id, level: 1)
                                                                                             ^^^^^^
db/seeds.rb:108:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura de control que permite repetir una porción de código mientras se cumple una condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:108:139: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura de control que permite repetir una porción de código mientras se cumple una condición.", question_id: question.id)
                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:109:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura de control que permite ejecutar un bloque de código si se cumple una condición, y otro bloque si no se cumple.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:109:163: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura de control que permite ejecutar un bloque de código si se cumple una condición, y otro bloque si no se cumple.", question_id: question.id)
                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:110:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura de control que permite saltar a una sección específica de código si se cumple una condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:110:145: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura de control que permite saltar a una sección específica de código si se cumple una condición.", question_id: question.id)
                                                                                                                                                ^^^^^^^^^^^^
db/seeds.rb:112:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:116:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if en programación?", topic_id: topic2.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:116:84: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if en programación?", topic_id: topic2.id, level: 1)
                                                                                   ^^^^^^^^^
db/seeds.rb:116:105: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración if en programación?", topic_id: topic2.id, level: 1)
                                                                                                        ^^^^^^
db/seeds.rb:117:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una declaración que se ejecuta siempre, independientemente de la condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:117:113: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una declaración que se ejecuta siempre, independientemente de la condición.", question_id: question.id)
                                                                                                                ^^^^^^^^^^^^
db/seeds.rb:118:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una declaración que se ejecuta solo si una condición específica se cumple.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:118:112: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una declaración que se ejecuta solo si una condición específica se cumple.", question_id: question.id)
                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:119:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una declaración que se ejecuta solo si una condición específica no se cumple.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:119:115: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una declaración que se ejecuta solo si una condición específica no se cumple.", question_id: question.id)
                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:121:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:125:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si dos valores son iguales en una condición?", topic_id: topic2.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:125:146: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si dos valores son iguales en una condición?", topic_id: topic2.id, level: 1)
                                                                                                                                                 ^^^^^^^^^
db/seeds.rb:125:167: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador de comparación utilizado para verificar si dos valores son iguales en una condición?", topic_id: topic2.id, level: 1)
                                                                                                                                                                      ^^^^^^
db/seeds.rb:126:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "==", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:126:40: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "==", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:127:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: ">", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:127:39: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: ">", question_id: question.id)
                                      ^^^^^^^^^^^^
db/seeds.rb:128:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "!=", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:128:40: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "!=", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:130:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:136:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre los operadores lógicos AND (&&) y OR (||)?", topic_id: topic2.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:136:112: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre los operadores lógicos AND (&&) y OR (||)?", topic_id: topic2.id, level: 2)
                                                                                                               ^^^^^^^^^
db/seeds.rb:136:133: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre los operadores lógicos AND (&&) y OR (||)?", topic_id: topic2.id, level: 2)
                                                                                                                                    ^^^^^^
db/seeds.rb:137:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "AND (&&) y OR (||) son operadores que realizan la misma función y se pueden utilizar indistintamente.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:137:139: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "AND (&&) y OR (||) son operadores que realizan la misma función y se pueden utilizar indistintamente.", question_id: question.id)
                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:138:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "AND (&&) devuelve verdadero si al menos uno de los operandos es verdadero, mientras que OR (||) devuelve verdadero si ambos operandos son verdaderos.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:138:187: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "AND (&&) devuelve verdadero si al menos uno de los operandos es verdadero, mientras que OR (||) devuelve verdadero si ambos operandos son verdaderos.", question_id: question.id)
                                                                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:139:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "AND (&&) devuelve verdadero si ambos operandos son verdaderos, mientras que OR (||) devuelve verdadero si al menos uno de los operandos es verdadero.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:139:187: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "AND (&&) devuelve verdadero si ambos operandos son verdaderos, mientras que OR (||) devuelve verdadero si al menos uno de los operandos es verdadero.", question_id: question.id)
                                                                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:141:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:145:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es una condición compuesta?", topic_id: topic2.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:145:90: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es una condición compuesta?", topic_id: topic2.id, level: 2)
                                                                                         ^^^^^^^^^
db/seeds.rb:145:111: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es una condición compuesta?", topic_id: topic2.id, level: 2)
                                                                                                              ^^^^^^
db/seeds.rb:146:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una condición que siempre se evalúa como verdadera.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:146:89: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una condición que siempre se evalúa como verdadera.", question_id: question.id)
                                                                                        ^^^^^^^^^^^^
db/seeds.rb:147:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una condición que se utiliza para definir variables booleanas.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:147:100: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una condición que se utiliza para definir variables booleanas.", question_id: question.id)
                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:148:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una condición que combina múltiples condiciones utilizando operadores lógicos.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:148:116: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una condición que combina múltiples condiciones utilizando operadores lógicos.", question_id: question.id)
                                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:150:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:154:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un bloque 'else' en una sentencia 'if-else'?", topic_id: topic2.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:154:110: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un bloque 'else' en una sentencia 'if-else'?", topic_id: topic2.id, level: 2)
                                                                                                             ^^^^^^^^^
db/seeds.rb:154:131: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un bloque 'else' en una sentencia 'if-else'?", topic_id: topic2.id, level: 2)
                                                                                                                                  ^^^^^^
db/seeds.rb:155:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un bloque de código que se ejecuta si la condición del 'if' es verdadera.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:155:111: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un bloque de código que se ejecuta si la condición del 'if' es verdadera.", question_id: question.id)
                                                                                                              ^^^^^^^^^^^^
db/seeds.rb:156:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un bloque de código que se ejecuta si la condición del 'if' es falsa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:156:107: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un bloque de código que se ejecuta si la condición del 'if' es falsa.", question_id: question.id)
                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:157:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un bloque de código que se ejecuta antes de la evaluación de la condición del 'if'.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:157:121: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un bloque de código que se ejecuta antes de la evaluación de la condición del 'if'.", question_id: question.id)
                                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:159:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:165:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes descripciones se corresponde con el concepto de condicional anidado?", topic_id: topic2.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:165:133: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes descripciones se corresponde con el concepto de condicional anidado?", topic_id: topic2.id, level: 3)
                                                                                                                                    ^^^^^^^^^
db/seeds.rb:165:154: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál de las siguientes descripciones se corresponde con el concepto de condicional anidado?", topic_id: topic2.id, level: 3)
                                                                                                                                                         ^^^^^^
db/seeds.rb:166:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un condicional anidado es una técnica que consiste en combinar múltiples condiciones utilizando operadores lógicos para evaluar una única expresión booleana.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:166:195: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un condicional anidado es una técnica que consiste en combinar múltiples condiciones utilizando operadores lógicos para evaluar una única expresión booleana.", question_id: question.id)
                                                                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:167:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un condicional anidado es una estructura de control en la que se evalúan múltiples condiciones en cascada, donde cada condición se verifica solo si la anterior es falsa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:167:207: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un condicional anidado es una estructura de control en la que se evalúan múltiples condiciones en cascada, donde cada condición se verifica solo si la anterior es falsa.", question_id: question.id)
                                                                                                                                                                                                              ^^^^^^^^^^^^
db/seeds.rb:168:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un condicional anidado es una estructura de control que permite ejecutar un bloque de código si se cumple una condición, y otro bloque si no se cumple.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:168:189: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un condicional anidado es una estructura de control que permite ejecutar un bloque de código si se cumple una condición, y otro bloque si no se cumple.", question_id: question.id)
                                                                                                                                                                                            ^^^^^^^^^^^^
db/seeds.rb:170:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:174:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración switch en programación?", topic_id: topic2.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:174:88: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración switch en programación?", topic_id: topic2.id, level: 3)
                                                                                       ^^^^^^^^^
db/seeds.rb:174:109: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una declaración switch en programación?", topic_id: topic2.id, level: 3)
                                                                                                            ^^^^^^
db/seeds.rb:175:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una declaración que se utiliza para repetir un bloque de código mientras se cumple una condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:175:135: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una declaración que se utiliza para repetir un bloque de código mientras se cumple una condición.", question_id: question.id)
                                                                                                                                      ^^^^^^^^^^^^
db/seeds.rb:176:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una declaración que permite ejecutar diferentes bloques de código dependiendo del valor de una variable o expresión.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:176:154: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una declaración que permite ejecutar diferentes bloques de código dependiendo del valor de una variable o expresión.", question_id: question.id)
                                                                                                                                                         ^^^^^^^^^^^^
db/seeds.rb:177:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una declaración que permite realizar operaciones matemáticas en un programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:177:114: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una declaración que permite realizar operaciones matemáticas en un programa.", question_id: question.id)
                                                                                                                 ^^^^^^^^^^^^
db/seeds.rb:179:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:183:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador lógico utilizado para negar una condición en programación?", topic_id: topic2.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:183:120: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador lógico utilizado para negar una condición en programación?", topic_id: topic2.id, level: 3)
                                                                                                                       ^^^^^^^^^
db/seeds.rb:183:141: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el operador lógico utilizado para negar una condición en programación?", topic_id: topic2.id, level: 3)
                                                                                                                                            ^^^^^^
db/seeds.rb:184:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "!", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:184:39: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "!", question_id: question.id)
                                      ^^^^^^^^^^^^
db/seeds.rb:185:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "&&", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:185:40: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "&&", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:186:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "||", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:186:40: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "||", question_id: question.id)
                                       ^^^^^^^^^^^^
db/seeds.rb:188:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:195:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo en programación?", topic_id: topic3.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:195:74: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo en programación?", topic_id: topic3.id, level: 1)
                                                                         ^^^^^^^^^
db/seeds.rb:195:95: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo en programación?", topic_id: topic3.id, level: 1)
                                                                                              ^^^^^^
db/seeds.rb:196:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura de control que se repite un número específico de veces.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:196:108: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura de control que se repite un número específico de veces.", question_id: question.id)
                                                                                                           ^^^^^^^^^^^^
db/seeds.rb:197:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura de control que repite un bloque de código mientras se cumple una condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:197:128: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura de control que repite un bloque de código mientras se cumple una condición.", question_id: question.id)
                                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:198:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura de control que permite seleccionar entre múltiples opciones.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:198:113: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura de control que permite seleccionar entre múltiples opciones.", question_id: question.id)
                                                                                                                ^^^^^^^^^^^^
db/seeds.rb:200:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:204:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo do-while?", topic_id: topic3.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:204:105: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo do-while?", topic_id: topic3.id, level: 1)
                                                                                                        ^^^^^^^^^
db/seeds.rb:204:126: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo do-while?", topic_id: topic3.id, level: 1)
                                                                                                                             ^^^^^^
db/seeds.rb:205:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El ciclo do-while se ejecuta al menos una vez, mientras que el ciclo while puede no ejecutarse nunca.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:205:139: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El ciclo do-while se ejecuta al menos una vez, mientras que el ciclo while puede no ejecutarse nunca.", question_id: question.id)
                                                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:206:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El ciclo while no existe en programación, solo existe el ciclo do-while.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:206:110: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El ciclo while no existe en programación, solo existe el ciclo do-while.", question_id: question.id)
                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:207:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El ciclo while evalúa la condición al final del ciclo, mientras que el ciclo do-while la evalúa al principio.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:207:147: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El ciclo while evalúa la condición al final del ciclo, mientras que el ciclo do-while la evalúa al principio.", question_id: question.id)
                                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:209:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:213:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'for'?", topic_id: topic3.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:213:81: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'for'?", topic_id: topic3.id, level: 1)
                                                                                ^^^^^^^^^
db/seeds.rb:213:102: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'for'?", topic_id: topic3.id, level: 1)
                                                                                                     ^^^^^^
db/seeds.rb:214:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura utilizada para tomar decisiones basadas en una condición específica.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:214:121: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura utilizada para tomar decisiones basadas en una condición específica.", question_id: question.id)
                                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:215:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura utilizada para definir variables y asignarles valores.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:215:107: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura utilizada para definir variables y asignarles valores.", question_id: question.id)
                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:216:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura utilizada para repetir un bloque de código un número específico de veces.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:216:126: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura utilizada para repetir un bloque de código un número específico de veces.", question_id: question.id)
                                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:218:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:224:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo for?", topic_id: topic3.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:224:100: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo for?", topic_id: topic3.id, level: 2)
                                                                                                   ^^^^^^^^^
db/seeds.rb:224:121: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es la diferencia entre el ciclo while y el ciclo for?", topic_id: topic3.id, level: 2)
                                                                                                                        ^^^^^^
db/seeds.rb:225:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El ciclo while y el ciclo for son estructuras de control idénticas y se pueden utilizar indistintamente.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:225:142: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El ciclo while y el ciclo for son estructuras de control idénticas y se pueden utilizar indistintamente.", question_id: question.id)
                                                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:226:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El ciclo while se utiliza cuando se conoce de antemano el número de veces que se repetirá el bloque de código, mientras que el ciclo for se utiliza cuando no se conoce el número de repeticiones.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:226:232: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El ciclo while se utiliza cuando se conoce de antemano el número de veces que se repetirá el bloque de código, mientras que el ciclo for se utiliza cuando no se conoce el número de repeticiones.", question_id: question.id)
                                                                                                                                                                                                                                       ^^^^^^^^^^^^
db/seeds.rb:227:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El ciclo while se utiliza para repetir un bloque de código mientras se cumple una condición, mientras que el ciclo for se utiliza para repetir un bloque de código un número específico de veces.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:227:231: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El ciclo while se utiliza para repetir un bloque de código mientras se cumple una condición, mientras que el ciclo for se utiliza para repetir un bloque de código un número específico de veces.", question_id: question.id)
                                                                                                                                                                                                                                      ^^^^^^^^^^^^
db/seeds.rb:229:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:233:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una iteración en programación?", topic_id: topic3.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:233:79: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una iteración en programación?", topic_id: topic3.id, level: 2)
                                                                              ^^^^^^^^^
db/seeds.rb:233:100: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una iteración en programación?", topic_id: topic3.id, level: 2)
                                                                                                   ^^^^^^
db/seeds.rb:234:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable que se utiliza en un ciclo para contar el número de repeticiones.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:234:116: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable que se utiliza en un ciclo para contar el número de repeticiones.", question_id: question.id)
                                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:235:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Cada vez que se ejecuta el cuerpo de un ciclo se llama una iteración.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:235:107: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Cada vez que se ejecuta el cuerpo de un ciclo se llama una iteración.", question_id: question.id)
                                                                                                          ^^^^^^^^^^^^
db/seeds.rb:236:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una operación matemática que se realiza dentro de un ciclo.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:236:97: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una operación matemática que se realiza dentro de un ciclo.", question_id: question.id)
                                                                                                ^^^^^^^^^^^^
db/seeds.rb:238:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:242:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito de utilizar la sentencia 'continue' en un ciclo?", topic_id: topic3.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:242:111: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito de utilizar la sentencia 'continue' en un ciclo?", topic_id: topic3.id, level: 2)
                                                                                                              ^^^^^^^^^
db/seeds.rb:242:132: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito de utilizar la sentencia 'continue' en un ciclo?", topic_id: topic3.id, level: 2)
                                                                                                                                   ^^^^^^
db/seeds.rb:243:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Finalizar la ejecución del ciclo y continuar con la siguiente instrucción fuera del ciclo.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:243:128: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Finalizar la ejecución del ciclo y continuar con la siguiente instrucción fuera del ciclo.", question_id: question.id)
                                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:244:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Ignorar una iteración del ciclo y pasar a la siguiente.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:244:93: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Ignorar una iteración del ciclo y pasar a la siguiente.", question_id: question.id)
                                                                                            ^^^^^^^^^^^^
db/seeds.rb:245:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Reiniciar el ciclo desde el principio.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:245:76: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Reiniciar el ciclo desde el principio.", question_id: question.id)
                                                                           ^^^^^^^^^^^^
db/seeds.rb:247:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:253:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo anidado?", topic_id: topic3.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:253:66: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo anidado?", topic_id: topic3.id, level: 3)
                                                                 ^^^^^^^^^
db/seeds.rb:253:87: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es un ciclo anidado?", topic_id: topic3.id, level: 3)
                                                                                      ^^^^^^
db/seeds.rb:254:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un ciclo que se repite indefinidamente hasta que se cumpla una condición.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:254:111: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un ciclo que se repite indefinidamente hasta que se cumpla una condición.", question_id: question.id)
                                                                                                              ^^^^^^^^^^^^
db/seeds.rb:255:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un ciclo que se ejecuta solo si una condición específica se cumple.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:255:105: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un ciclo que se ejecuta solo si una condición específica se cumple.", question_id: question.id)
                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:256:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un ciclo que contiene otro ciclo dentro de su bloque de código.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:256:101: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un ciclo que contiene otro ciclo dentro de su bloque de código.", question_id: question.id)
                                                                                                    ^^^^^^^^^^^^
db/seeds.rb:258:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:262:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la instrucción break en programación?", topic_id: topic3.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:262:86: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la instrucción break en programación?", topic_id: topic3.id, level: 3)
                                                                                     ^^^^^^^^^
db/seeds.rb:262:107: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la instrucción break en programación?", topic_id: topic3.id, level: 3)
                                                                                                          ^^^^^^
db/seeds.rb:263:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una instrucción que finaliza el ciclo actual y continúa con la siguiente iteración.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:263:121: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una instrucción que finaliza el ciclo actual y continúa con la siguiente iteración.", question_id: question.id)
                                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:264:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una instrucción que finaliza por completo la ejecución del programa.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:264:106: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una instrucción que finaliza por completo la ejecución del programa.", question_id: question.id)
                                                                                                         ^^^^^^^^^^^^
db/seeds.rb:265:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una instrucción que permite cambiar el flujo de ejecución a una sección específica del código.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:265:132: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una instrucción que permite cambiar el flujo de ejecución a una sección específica del código.", question_id: question.id)
                                                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:267:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:271:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'foreach'?", topic_id: topic3.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:271:85: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'foreach'?", topic_id: topic3.id, level: 3)
                                                                                    ^^^^^^^^^
db/seeds.rb:271:106: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un ciclo 'foreach'?", topic_id: topic3.id, level: 3)
                                                                                                         ^^^^^^
db/seeds.rb:272:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura utilizada para iterar sobre una colección de elementos, como un arreglo o una lista.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:272:137: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una estructura utilizada para iterar sobre una colección de elementos, como un arreglo o una lista.", question_id: question.id)
                                                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:273:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura utilizada para tomar decisiones basadas en múltiples condiciones secuenciales.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:273:131: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una estructura utilizada para tomar decisiones basadas en múltiples condiciones secuenciales.", question_id: question.id)
                                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:274:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura utilizada para repetir un bloque de código un número específico de veces.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:274:126: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una estructura utilizada para repetir un bloque de código un número específico de veces.", question_id: question.id)
                                                                                                                             ^^^^^^^^^^^^
db/seeds.rb:276:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:283:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una función en programación?", topic_id: topic4.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:283:77: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una función en programación?", topic_id: topic4.id, level: 1)
                                                                            ^^^^^^^^^
db/seeds.rb:283:98: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una función en programación?", topic_id: topic4.id, level: 1)
                                                                                                 ^^^^^^
db/seeds.rb:284:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un conjunto de variables.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:284:63: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un conjunto de variables.", question_id: question.id)
                                                              ^^^^^^^^^^^^
db/seeds.rb:285:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un bloque de código que realiza una tarea específica.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:285:91: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un bloque de código que realiza una tarea específica.", question_id: question.id)
                                                                                          ^^^^^^^^^^^^
db/seeds.rb:286:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un tipo de dato numérico.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:286:63: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un tipo de dato numérico.", question_id: question.id)
                                                              ^^^^^^^^^^^^
db/seeds.rb:288:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:292:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito principal de una función en programación?", topic_id: topic4.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:292:104: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito principal de una función en programación?", topic_id: topic4.id, level: 1)
                                                                                                       ^^^^^^^^^
db/seeds.rb:292:125: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Cuál es el propósito principal de una función en programación?", topic_id: topic4.id, level: 1)
                                                                                                                            ^^^^^^
db/seeds.rb:293:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Organizar el código en secciones lógicas y reutilizables.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:293:95: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Organizar el código en secciones lógicas y reutilizables.", question_id: question.id)
                                                                                              ^^^^^^^^^^^^
db/seeds.rb:294:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Definir variables locales.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:294:64: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Definir variables locales.", question_id: question.id)
                                                               ^^^^^^^^^^^^
db/seeds.rb:295:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Realizar operaciones matemáticas complejas.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:295:81: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Realizar operaciones matemáticas complejas.", question_id: question.id)
                                                                                ^^^^^^^^^^^^
db/seeds.rb:297:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:301:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un parámetro en una función?", topic_id: topic4.id, level: 1)
                           ^^^^^^^^
db/seeds.rb:301:94: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un parámetro en una función?", topic_id: topic4.id, level: 1)
                                                                                             ^^^^^^^^^
db/seeds.rb:301:115: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es un parámetro en una función?", topic_id: topic4.id, level: 1)
                                                                                                                  ^^^^^^
db/seeds.rb:302:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable utilizada para almacenar el resultado de una operación matemática.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:302:117: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una variable utilizada para almacenar el resultado de una operación matemática.", question_id: question.id)
                                                                                                                    ^^^^^^^^^^^^
db/seeds.rb:303:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una variable utilizada para almacenar datos temporales dentro de una función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:303:115: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una variable utilizada para almacenar datos temporales dentro de una función.", question_id: question.id)
                                                                                                                  ^^^^^^^^^^^^
db/seeds.rb:304:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable utilizada para pasar valores a una función cuando se invoca.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:304:111: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una variable utilizada para pasar valores a una función cuando se invoca.", question_id: question.id)
                                                                                                              ^^^^^^^^^^^^
db/seeds.rb:306:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:312:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el 'alcance' de una función en programación?", topic_id: topic4.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:312:93: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el 'alcance' de una función en programación?", topic_id: topic4.id, level: 2)
                                                                                            ^^^^^^^^^
db/seeds.rb:312:114: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es el 'alcance' de una función en programación?", topic_id: topic4.id, level: 2)
                                                                                                                 ^^^^^^
db/seeds.rb:313:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El número de veces que se puede llamar a una función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:313:91: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El número de veces que se puede llamar a una función.", question_id: question.id)
                                                                                          ^^^^^^^^^^^^
db/seeds.rb:314:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El área del programa donde una variable es visible y puede ser utilizada.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:314:111: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El área del programa donde una variable es visible y puede ser utilizada.", question_id: question.id)
                                                                                                              ^^^^^^^^^^^^
db/seeds.rb:315:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El tiempo que tarda una función en ejecutarse.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:315:84: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El tiempo que tarda una función en ejecutarse.", question_id: question.id)
                                                                                   ^^^^^^^^^^^^
db/seeds.rb:317:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:321:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la 'recursividad' en programación?", topic_id: topic4.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:321:83: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la 'recursividad' en programación?", topic_id: topic4.id, level: 2)
                                                                                  ^^^^^^^^^
db/seeds.rb:321:104: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es la 'recursividad' en programación?", topic_id: topic4.id, level: 2)
                                                                                                       ^^^^^^
db/seeds.rb:322:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La capacidad de una función de llamarse a sí misma.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:322:89: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "La capacidad de una función de llamarse a sí misma.", question_id: question.id)
                                                                                        ^^^^^^^^^^^^
db/seeds.rb:323:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La habilidad de una función para recibir múltiples parámetros.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:323:100: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "La habilidad de una función para recibir múltiples parámetros.", question_id: question.id)
                                                                                                   ^^^^^^^^^^^^
db/seeds.rb:324:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un error que ocurre cuando una función se llama demasiadas veces.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:324:103: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Un error que ocurre cuando una función se llama demasiadas veces.", question_id: question.id)
                                                                                                      ^^^^^^^^^^^^
db/seeds.rb:326:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:330:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es el 'valor de retorno' de una función?", topic_id: topic4.id, level: 2)
                           ^^^^^^^^
db/seeds.rb:330:103: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es el 'valor de retorno' de una función?", topic_id: topic4.id, level: 2)
                                                                                                      ^^^^^^^^^
db/seeds.rb:330:124: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es el 'valor de retorno' de una función?", topic_id: topic4.id, level: 2)
                                                                                                                           ^^^^^^
db/seeds.rb:331:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El valor que se pasa como argumento a una función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:331:88: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "El valor que se pasa como argumento a una función.", question_id: question.id)
                                                                                       ^^^^^^^^^^^^
db/seeds.rb:332:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El valor que una función devuelve después de realizar su tarea.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:332:101: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "El valor que una función devuelve después de realizar su tarea.", question_id: question.id)
                                                                                                    ^^^^^^^^^^^^
db/seeds.rb:333:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El valor predeterminado que se asigna a una variable dentro de una función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:333:113: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "El valor predeterminado que se asigna a una variable dentro de una función.", question_id: question.id)
                                                                                                                ^^^^^^^^^^^^
db/seeds.rb:335:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:342:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una 'función anónima' en programación?", topic_id: topic4.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:342:87: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una 'función anónima' en programación?", topic_id: topic4.id, level: 3)
                                                                                      ^^^^^^^^^
db/seeds.rb:342:108: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué es una 'función anónima' en programación?", topic_id: topic4.id, level: 3)
                                                                                                           ^^^^^^
db/seeds.rb:343:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una función sin nombre que se asigna a una variable o se pasa como argumento a otra función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:343:130: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Una función sin nombre que se asigna a una variable o se pasa como argumento a otra función.", question_id: question.id)
                                                                                                                                 ^^^^^^^^^^^^
db/seeds.rb:344:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una función que solo puede ser utilizada dentro de otra función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:344:102: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Una función que solo puede ser utilizada dentro de otra función.", question_id: question.id)
                                                                                                     ^^^^^^^^^^^^
db/seeds.rb:345:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una función que no devuelve ningún valor.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:345:79: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una función que no devuelve ningún valor.", question_id: question.id)
                                                                              ^^^^^^^^^^^^
db/seeds.rb:347:16: C: Style/HashSyntax: Use hash rockets syntax.
option1.update(correct: true)
               ^^^^^^^^
db/seeds.rb:351:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué son las 'funciones de orden superior' en programación?", topic_id: topic4.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:351:100: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué son las 'funciones de orden superior' en programación?", topic_id: topic4.id, level: 3)
                                                                                                   ^^^^^^^^^
db/seeds.rb:351:121: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "¿Qué son las 'funciones de orden superior' en programación?", topic_id: topic4.id, level: 3)
                                                                                                                        ^^^^^^
db/seeds.rb:352:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Funciones que operan exclusivamente en números enteros.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:352:93: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Funciones que operan exclusivamente en números enteros.", question_id: question.id)
                                                                                            ^^^^^^^^^^^^
db/seeds.rb:353:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Funciones que pueden recibir otras funciones como parámetros o devolverlas como resultado.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:353:128: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Funciones que pueden recibir otras funciones como parámetros o devolverlas como resultado.", question_id: question.id)
                                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:354:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Funciones que solo pueden ser utilizadas por programadores experimentados.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:354:112: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Funciones que solo pueden ser utilizadas por programadores experimentados.", question_id: question.id)
                                                                                                               ^^^^^^^^^^^^
db/seeds.rb:356:16: C: Style/HashSyntax: Use hash rockets syntax.
option2.update(correct: true)
               ^^^^^^^^
db/seeds.rb:360:28: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es la 'recursión de cola' (tail recursion)?", topic_id: topic4.id, level: 3)
                           ^^^^^^^^
db/seeds.rb:360:106: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es la 'recursión de cola' (tail recursion)?", topic_id: topic4.id, level: 3)
                                                                                                         ^^^^^^^^^
db/seeds.rb:360:127: C: Style/HashSyntax: Use hash rockets syntax.
question = Question.create(content: "En programación, ¿qué es la 'recursión de cola' (tail recursion)?", topic_id: topic4.id, level: 3)
                                                                                                                              ^^^^^^
db/seeds.rb:361:25: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un tipo especial de recursión que utiliza una estructura de datos en forma de cola.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:361:121: C: Style/HashSyntax: Use hash rockets syntax.
option1 = Option.create(content: "Un tipo especial de recursión que utiliza una estructura de datos en forma de cola.", question_id: question.id)
                                                                                                                        ^^^^^^^^^^^^
db/seeds.rb:362:25: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un enfoque de programación que utiliza ciclos en lugar de recursión.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:362:106: C: Style/HashSyntax: Use hash rockets syntax.
option2 = Option.create(content: "Un enfoque de programación que utiliza ciclos en lugar de recursión.", question_id: question.id)
                                                                                                         ^^^^^^^^^^^^
db/seeds.rb:363:25: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una forma optimizada de recursión en la que la llamada recursiva es la última operación en la función.", question_id: question.id)
                        ^^^^^^^^
db/seeds.rb:363:140: C: Style/HashSyntax: Use hash rockets syntax.
option3 = Option.create(content: "Una forma optimizada de recursión en la que la llamada recursiva es la última operación en la función.", question_id: question.id)
                                                                                                                                           ^^^^^^^^^^^^
db/seeds.rb:365:16: C: Style/HashSyntax: Use hash rockets syntax.
option3.update(correct: true)
               ^^^^^^^^
db/seeds.rb:376:26: C: Style/HashSyntax: Use hash rockets syntax.
        Knowledge.create(user_id: user.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                         ^^^^^^^^
db/seeds.rb:376:44: C: Style/HashSyntax: Use hash rockets syntax.
        Knowledge.create(user_id: user.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                           ^^^^^^^^^
db/seeds.rb:376:64: C: Style/HashSyntax: Use hash rockets syntax.
        Knowledge.create(user_id: user.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                                               ^^^^^^
db/seeds.rb:376:74: C: Style/HashSyntax: Use hash rockets syntax.
        Knowledge.create(user_id: user.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                                                         ^^^^^^^^^^^^^^^^^^^^^^
models/answer.rb:8:25: C: Style/HashSyntax: Use hash rockets syntax.
    validates :user_id, presence: true
                        ^^^^^^^^^
models/answer.rb:9:29: C: Style/HashSyntax: Use hash rockets syntax.
    validates :question_id, presence: true
                            ^^^^^^^^^
models/answer.rb:10:27: C: Style/HashSyntax: Use hash rockets syntax.
    validates :option_id, presence: true
                          ^^^^^^^^^
models/answer.rb:48:43: C: Style/HashSyntax: Use hash rockets syntax.
            knowledge = Knowledge.find_by(user_id: user_id, topic_id: topic)
                                          ^^^^^^^^
models/answer.rb:48:61: C: Style/HashSyntax: Use hash rockets syntax.
            knowledge = Knowledge.find_by(user_id: user_id, topic_id: topic)
                                                            ^^^^^^^^^
models/knowledge.rb:5:25: C: Style/HashSyntax: Use hash rockets syntax.
    validates :user_id, presence: true
                        ^^^^^^^^^
models/knowledge.rb:6:26: C: Style/HashSyntax: Use hash rockets syntax.
    validates :topic_id, presence: true
                         ^^^^^^^^^
models/knowledge.rb:7:23: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..4 }
                      ^^^^^^^^^
models/knowledge.rb:7:39: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..4 }
                                      ^^^^^^^^^^
models/knowledge.rb:7:52: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..4 }
                                                   ^^^
models/option.rb:5:25: C: Style/HashSyntax: Use hash rockets syntax.
    validates :content, presence: true 
                        ^^^^^^^^^
models/question.rb:7:25: C: Style/HashSyntax: Use hash rockets syntax.
    validates :content, presence: true, uniqueness: true
                        ^^^^^^^^^
models/question.rb:7:41: C: Style/HashSyntax: Use hash rockets syntax.
    validates :content, presence: true, uniqueness: true
                                        ^^^^^^^^^^^
models/question.rb:8:23: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..3 }
                      ^^^^^^^^^
models/question.rb:8:39: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..3 }
                                      ^^^^^^^^^^
models/question.rb:8:52: C: Style/HashSyntax: Use hash rockets syntax.
    validates :level, presence: true, inclusion: { in: 1..3 }
                                                   ^^^
models/topic.rb:7:22: C: Style/HashSyntax: Use hash rockets syntax.
    validates :name, presence: true, uniqueness: true
                     ^^^^^^^^^
models/topic.rb:7:38: C: Style/HashSyntax: Use hash rockets syntax.
    validates :name, presence: true, uniqueness: true
                                     ^^^^^^^^^^^
models/topic.rb:8:37: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L1, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                    ^^^^^^^^^
models/topic.rb:8:53: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L1, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                    ^^^^^^^^^^^^^
models/topic.rb:8:69: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L1, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
models/topic.rb:9:37: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L2, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                    ^^^^^^^^^
models/topic.rb:9:53: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L2, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                    ^^^^^^^^^^^^^
models/topic.rb:9:69: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L2, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
models/topic.rb:10:37: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L3, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                    ^^^^^^^^^
models/topic.rb:10:53: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L3, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                    ^^^^^^^^^^^^^
models/topic.rb:10:69: C: Style/HashSyntax: Use hash rockets syntax.
    validates :amount_questions_L3, presence: true, numericality: { greater_than_or_equal_to: 0 }
                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
models/user.rb:8:26: C: Style/HashSyntax: Use hash rockets syntax.
    validates :username, presence: true, uniqueness: true
                         ^^^^^^^^^
models/user.rb:8:42: C: Style/HashSyntax: Use hash rockets syntax.
    validates :username, presence: true, uniqueness: true
                                         ^^^^^^^^^^^
models/user.rb:9:23: C: Style/HashSyntax: Use hash rockets syntax.
    validates :email, presence: true, uniqueness: true
                      ^^^^^^^^^
models/user.rb:9:39: C: Style/HashSyntax: Use hash rockets syntax.
    validates :email, presence: true, uniqueness: true
                                      ^^^^^^^^^^^
models/user.rb:35:30: C: Style/HashSyntax: Use hash rockets syntax.
            Knowledge.create(user_id: self.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                             ^^^^^^^^
models/user.rb:35:48: C: Style/HashSyntax: Use hash rockets syntax.
            Knowledge.create(user_id: self.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                               ^^^^^^^^^
models/user.rb:35:68: C: Style/HashSyntax: Use hash rockets syntax.
            Knowledge.create(user_id: self.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                                                   ^^^^^^
models/user.rb:35:78: C: Style/HashSyntax: Use hash rockets syntax.
            Knowledge.create(user_id: self.id, topic_id: topic.id, level: 1, correct_answers_count: 0)
                                                                             ^^^^^^^^^^^^^^^^^^^^^^
models/user.rb:41:22: C: Style/HashSyntax: Use hash rockets syntax.
        User.exists?(username: username)
                     ^^^^^^^^^
models/user.rb:45:22: C: Style/HashSyntax: Use hash rockets syntax.
        User.exists?(email: email)
                     ^^^^^^
server.rb:17:30: C: Style/HashSyntax: Use hash rockets syntax.
  use Rack::Session::Cookie, key: 'prelude_code_session',
                             ^^^^
server.rb:18:30: C: Style/HashSyntax: Use hash rockets syntax.
                             expire_after: 60 * 60, #1 hora
                             ^^^^^^^^^^^^^
server.rb:19:30: C: Style/HashSyntax: Use hash rockets syntax.
                             secret: '5cQK8KJmpxqm3PBZQfpBgX3wb7U9x8R6NNLHU2cqTVcBSh9x7pdXa7eYrA9T4pbG'
                             ^^^^^^^
spec/app_spec.rb:35:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:35:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:35:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:36:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id, from_dashboard: true } 
                  ^^^^^^^^
spec/app_spec.rb:36:37: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id, from_dashboard: true } 
                                    ^^^^^^^^^^^^^^^
spec/app_spec.rb:50:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:50:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:50:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:50:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:54:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1)
                                 ^^^^^^^^
spec/app_spec.rb:54:78: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1)
                                                                             ^^^^^^^^^
spec/app_spec.rb:54:98: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1)
                                                                                                 ^^^^^^
spec/app_spec.rb:57:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:57:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:57:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:58:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                   ^^^^^
spec/app_spec.rb:58:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                               ^^^^^^
spec/app_spec.rb:58:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                                             ^^^^^^
spec/app_spec.rb:59:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:76:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic and Destroy', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:76:60: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic and Destroy', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                           ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:76:84: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic and Destroy', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                   ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:76:108: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic and Destroy', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:80:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user30', email: 'testttttt2222@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:80:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user30', email: 'testttttt2222@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:80:87: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user30', email: 'testttttt2222@example.com', password_digest: 'password123')
                                                                                      ^^^^^^^^^^^^^^^^
spec/app_spec.rb:81:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:100:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:100:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:100:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:100:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:104:40: C: Style/HashSyntax: Use hash rockets syntax.
      valid_question = Question.create(content: '¿Cuál es la capital de España?', topic_id: topic_id, level: 1)
                                       ^^^^^^^^
spec/app_spec.rb:104:83: C: Style/HashSyntax: Use hash rockets syntax.
      valid_question = Question.create(content: '¿Cuál es la capital de España?', topic_id: topic_id, level: 1)
                                                                                  ^^^^^^^^^
spec/app_spec.rb:104:103: C: Style/HashSyntax: Use hash rockets syntax.
      valid_question = Question.create(content: '¿Cuál es la capital de España?', topic_id: topic_id, level: 1)
                                                                                                      ^^^^^^
spec/app_spec.rb:122:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:122:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:122:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:122:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:126:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Lituania?', topic_id: topic_id, level: 1)
                                 ^^^^^^^^
spec/app_spec.rb:126:79: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Lituania?', topic_id: topic_id, level: 1)
                                                                              ^^^^^^^^^
spec/app_spec.rb:126:99: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Lituania?', topic_id: topic_id, level: 1)
                                                                                                  ^^^^^^
spec/app_spec.rb:147:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user50', email: 'test50@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:147:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user50', email: 'test50@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:147:80: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user50', email: 'test50@example.com', password_digest: 'password123')
                                                                               ^^^^^^^^^^^^^^^^
spec/app_spec.rb:148:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:175:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:175:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:175:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:175:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:178:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:178:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:178:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:180:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                   ^^^^^
spec/app_spec.rb:180:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                               ^^^^^^
spec/app_spec.rb:180:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                                             ^^^^^^
spec/app_spec.rb:182:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                 ^^^^^^^^
spec/app_spec.rb:182:78: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                             ^^^^^^^^^
spec/app_spec.rb:182:98: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                                                 ^^^^^^
spec/app_spec.rb:183:30: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                             ^^^^^^^^
spec/app_spec.rb:183:48: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                               ^^^^^^^^
spec/app_spec.rb:183:63: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                                              ^^^^^^^^^^^^
spec/app_spec.rb:185:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id }
                  ^^^^^^^^
spec/app_spec.rb:188:26: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                         ^^^^^^^^^^^^
spec/app_spec.rb:188:52: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                   ^^^^^^^^^^
spec/app_spec.rb:188:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                                         ^^^^^
spec/app_spec.rb:188:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                                                 ^
spec/app_spec.rb:202:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                           ^^^^^
spec/app_spec.rb:202:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:202:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:202:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:205:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:205:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:205:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:207:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                   ^^^^^
spec/app_spec.rb:207:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                               ^^^^^^
spec/app_spec.rb:207:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                                             ^^^^^^
spec/app_spec.rb:209:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                 ^^^^^^^^
spec/app_spec.rb:209:78: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                             ^^^^^^^^^
spec/app_spec.rb:209:98: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                                                 ^^^^^^
spec/app_spec.rb:210:30: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                             ^^^^^^^^
spec/app_spec.rb:210:48: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                               ^^^^^^^^
spec/app_spec.rb:210:63: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                                              ^^^^^^^^^^^^
spec/app_spec.rb:212:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id }
                  ^^^^^^^^
spec/app_spec.rb:215:26: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                         ^^^^^^^^^^^^
spec/app_spec.rb:215:52: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                   ^^^^^^^^^^
spec/app_spec.rb:215:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                                         ^^^^^
spec/app_spec.rb:215:82: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10}, 'rack.session' => session
                                                                                 ^
spec/app_spec.rb:229:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                           ^^^^^
spec/app_spec.rb:229:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:229:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:229:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:232:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:232:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:232:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:234:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3, correct_answers_count: 1)
                                   ^^^^^
spec/app_spec.rb:234:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3, correct_answers_count: 1)
                                               ^^^^^^
spec/app_spec.rb:234:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3, correct_answers_count: 1)
                                                             ^^^^^^
spec/app_spec.rb:234:72: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3, correct_answers_count: 1)
                                                                       ^^^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:236:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 3) 
                                 ^^^^^^^^
spec/app_spec.rb:236:78: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 3) 
                                                                             ^^^^^^^^^
spec/app_spec.rb:236:98: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 3) 
                                                                                                 ^^^^^^
spec/app_spec.rb:237:30: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                             ^^^^^^^^
spec/app_spec.rb:237:48: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                               ^^^^^^^^
spec/app_spec.rb:237:63: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: true, question_id: question.id) 
                                                              ^^^^^^^^^^^^
spec/app_spec.rb:239:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id }
                  ^^^^^^^^
spec/app_spec.rb:242:26: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time:10}, 'rack.session' => session
                         ^^^^^^^^^^^^
spec/app_spec.rb:242:52: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time:10}, 'rack.session' => session
                                                   ^^^^^^^^^^
spec/app_spec.rb:242:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time:10}, 'rack.session' => session
                                                                         ^^^^^
spec/app_spec.rb:242:81: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
      post '/answers', { question_id: question.id, option_id: option.id, time:10}, 'rack.session' => session
                                                                                ^
spec/app_spec.rb:256:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                           ^^^^^
spec/app_spec.rb:256:48: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:256:72: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:256:96: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: 'Test Topic', amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: 1)
                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/app_spec.rb:259:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:259:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:259:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:261:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                   ^^^^^
spec/app_spec.rb:261:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                               ^^^^^^
spec/app_spec.rb:261:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                                             ^^^^^^
spec/app_spec.rb:263:34: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                 ^^^^^^^^
spec/app_spec.rb:263:78: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                             ^^^^^^^^^
spec/app_spec.rb:263:98: C: Style/HashSyntax: Use hash rockets syntax.
      question = Question.create(content: '¿Cuál es la capital de Francia?', topic_id: topic_id, level: 1) 
                                                                                                 ^^^^^^
spec/app_spec.rb:264:30: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: false, question_id: question.id) 
                             ^^^^^^^^
spec/app_spec.rb:264:48: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: false, question_id: question.id) 
                                               ^^^^^^^^
spec/app_spec.rb:264:64: C: Style/HashSyntax: Use hash rockets syntax.
      option = Option.create(content: 'París', correct: false, question_id: question.id) 
                                                               ^^^^^^^^^^^^
spec/app_spec.rb:266:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id }
                  ^^^^^^^^
spec/app_spec.rb:269:26: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10 }, 'rack.session' => session
                         ^^^^^^^^^^^^
spec/app_spec.rb:269:52: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10 }, 'rack.session' => session
                                                   ^^^^^^^^^^
spec/app_spec.rb:269:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/answers', { question_id: question.id, option_id: option.id, time: 10 }, 'rack.session' => session
                                                                         ^^^^^
spec/app_spec.rb:286:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:286:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:286:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:290:24: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: 'password123' }
                       ^^^^^^^^^
spec/app_spec.rb:290:47: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: 'password123' }
                                              ^^^^^^
spec/app_spec.rb:290:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: 'password123' }
                                                                         ^^^^^^^^^
spec/app_spec.rb:306:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                         ^^^^^^^^^
spec/app_spec.rb:306:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                ^^^^^^
spec/app_spec.rb:306:76: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user', email: 'test@example.com', password: 'password123') 
                                                                           ^^^^^^^^^
spec/app_spec.rb:309:24: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: '5555555' }
                       ^^^^^^^^^
spec/app_spec.rb:309:47: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: '5555555' }
                                              ^^^^^^
spec/app_spec.rb:309:74: C: Style/HashSyntax: Use hash rockets syntax.
      post '/login', { username: 'test_user', email: 'test@example.com', password: '5555555' }
                                                                         ^^^^^^^^^
spec/app_spec.rb:324:27: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                          ^^^^^^^^^
spec/app_spec.rb:324:54: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                     ^^^^^^
spec/app_spec.rb:324:82: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                 ^^^^^^^^^
spec/app_spec.rb:324:107: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                                          ^^^^^^^^^^^^^^^^^
spec/app_spec.rb:339:31: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.find_by(username: 'nuevo_usuario')
                              ^^^^^^^^^
spec/app_spec.rb:347:30: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'nuevo_usuario', email: 'otro@example.com', password: 'otra_password')
                             ^^^^^^^^^
spec/app_spec.rb:347:57: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'nuevo_usuario', email: 'otro@example.com', password: 'otra_password')
                                                        ^^^^^^
spec/app_spec.rb:347:84: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'nuevo_usuario', email: 'otro@example.com', password: 'otra_password')
                                                                                   ^^^^^^^^^
spec/app_spec.rb:350:27: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                          ^^^^^^^^^
spec/app_spec.rb:350:54: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                     ^^^^^^
spec/app_spec.rb:350:82: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                 ^^^^^^^^^
spec/app_spec.rb:350:107: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                                          ^^^^^^^^^^^^^^^^^
spec/app_spec.rb:360:30: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'usuario_de_prueba', email: 'nuevo@example.com', password: 'otra_password')
                             ^^^^^^^^^
spec/app_spec.rb:360:61: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'usuario_de_prueba', email: 'nuevo@example.com', password: 'otra_password')
                                                            ^^^^^^
spec/app_spec.rb:360:89: C: Style/HashSyntax: Use hash rockets syntax.
      new_user = User.create(username: 'usuario_de_prueba', email: 'nuevo@example.com', password: 'otra_password')
                                                                                        ^^^^^^^^^
spec/app_spec.rb:363:27: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                          ^^^^^^^^^
spec/app_spec.rb:363:54: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                     ^^^^^^
spec/app_spec.rb:363:82: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                 ^^^^^^^^^
spec/app_spec.rb:363:107: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'password123' }
                                                                                                          ^^^^^^^^^^^^^^^^^
spec/app_spec.rb:373:27: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'otraPassword' }
                          ^^^^^^^^^
spec/app_spec.rb:373:54: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'otraPassword' }
                                                     ^^^^^^
spec/app_spec.rb:373:82: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'otraPassword' }
                                                                                 ^^^^^^^^^
spec/app_spec.rb:373:107: C: Style/HashSyntax: Use hash rockets syntax.
      post '/register', { username: 'nuevo_usuario', email: 'nuevo@example.com', password: 'password123', confirm_password: 'otraPassword' }
                                                                                                          ^^^^^^^^^^^^^^^^^
spec/app_spec.rb:385:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:385:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:385:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:386:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:401:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:401:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:401:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:402:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:413:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:413:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:413:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:414:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/app_spec.rb:425:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                         ^^^^^^^^^
spec/app_spec.rb:425:51: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                  ^^^^^^
spec/app_spec.rb:425:83: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user10', email: 'testttttt@example.com', password_digest: 'password123')
                                                                                  ^^^^^^^^^^^^^^^^
spec/app_spec.rb:426:19: C: Style/HashSyntax: Use hash rockets syntax.
      session = { user_id: user.id } 
                  ^^^^^^^^
spec/models/answer_spec.rb:5:24: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.create(username: "Pablito10", email: "pablito@example.com", password_digest: "password")
                       ^^^^^^^^^
spec/models/answer_spec.rb:5:47: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.create(username: "Pablito10", email: "pablito@example.com", password_digest: "password")
                                              ^^^^^^
spec/models/answer_spec.rb:5:77: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.create(username: "Pablito10", email: "pablito@example.com", password_digest: "password")
                                                                            ^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:6:28: C: Style/HashSyntax: Use hash rockets syntax.
    topic_1 = Topic.create(name: "Geografía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                           ^^^^^
spec/models/answer_spec.rb:6:47: C: Style/HashSyntax: Use hash rockets syntax.
    topic_1 = Topic.create(name: "Geografía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                              ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:6:71: C: Style/HashSyntax: Use hash rockets syntax.
    topic_1 = Topic.create(name: "Geografía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:6:95: C: Style/HashSyntax: Use hash rockets syntax.
    topic_1 = Topic.create(name: "Geografía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                              ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:7:34: C: Style/HashSyntax: Use hash rockets syntax.
    question_1 = Question.create(content: "¿Cuál es la capital de la Argentina?", topic: topic_1, level: 3)
                                 ^^^^^^^^
spec/models/answer_spec.rb:7:83: C: Style/HashSyntax: Use hash rockets syntax.
    question_1 = Question.create(content: "¿Cuál es la capital de la Argentina?", topic: topic_1, level: 3)
                                                                                  ^^^^^^
spec/models/answer_spec.rb:7:99: C: Style/HashSyntax: Use hash rockets syntax.
    question_1 = Question.create(content: "¿Cuál es la capital de la Argentina?", topic: topic_1, level: 3)
                                                                                                  ^^^^^^
spec/models/answer_spec.rb:8:31: C: Style/HashSyntax: Use hash rockets syntax.
    option_q1 = Option.create(content: "Nueva Dehli", question: question_1)
                              ^^^^^^^^
spec/models/answer_spec.rb:8:55: C: Style/HashSyntax: Use hash rockets syntax.
    option_q1 = Option.create(content: "Nueva Dehli", question: question_1)
                                                      ^^^^^^^^^
spec/models/answer_spec.rb:9:22: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_1, level: 3)
                     ^^^^^
spec/models/answer_spec.rb:9:34: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_1, level: 3)
                                 ^^^^^^
spec/models/answer_spec.rb:9:50: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_1, level: 3)
                                                 ^^^^^^
spec/models/answer_spec.rb:11:28: C: Style/HashSyntax: Use hash rockets syntax.
    topic_2 = Topic.create(name: "Música", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                           ^^^^^
spec/models/answer_spec.rb:11:44: C: Style/HashSyntax: Use hash rockets syntax.
    topic_2 = Topic.create(name: "Música", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:11:68: C: Style/HashSyntax: Use hash rockets syntax.
    topic_2 = Topic.create(name: "Música", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:11:92: C: Style/HashSyntax: Use hash rockets syntax.
    topic_2 = Topic.create(name: "Música", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:12:34: C: Style/HashSyntax: Use hash rockets syntax.
    question_2 = Question.create(content: "¿A qué familia pertenece la pandereta?", topic: topic_2, level: 2)
                                 ^^^^^^^^
spec/models/answer_spec.rb:12:85: C: Style/HashSyntax: Use hash rockets syntax.
    question_2 = Question.create(content: "¿A qué familia pertenece la pandereta?", topic: topic_2, level: 2)
                                                                                    ^^^^^^
spec/models/answer_spec.rb:12:101: C: Style/HashSyntax: Use hash rockets syntax.
    question_2 = Question.create(content: "¿A qué familia pertenece la pandereta?", topic: topic_2, level: 2)
                                                                                                    ^^^^^^
spec/models/answer_spec.rb:13:31: C: Style/HashSyntax: Use hash rockets syntax.
    option_q2 = Option.create(content: "Instrumentos de percusión", question: question_2)
                              ^^^^^^^^
spec/models/answer_spec.rb:13:69: C: Style/HashSyntax: Use hash rockets syntax.
    option_q2 = Option.create(content: "Instrumentos de percusión", question: question_2)
                                                                    ^^^^^^^^^
spec/models/answer_spec.rb:14:22: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_2, level: 1)
                     ^^^^^
spec/models/answer_spec.rb:14:34: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_2, level: 1)
                                 ^^^^^^
spec/models/answer_spec.rb:14:50: C: Style/HashSyntax: Use hash rockets syntax.
    Knowledge.create(user: user, topic: topic_2, level: 1)
                                                 ^^^^^^
spec/models/answer_spec.rb:18:29: C: Style/HashSyntax: Use hash rockets syntax.
        user3 = User.create(username: "Mateo19", email: "mateo19@example.com", password_digest: "password")
                            ^^^^^^^^^
spec/models/answer_spec.rb:18:50: C: Style/HashSyntax: Use hash rockets syntax.
        user3 = User.create(username: "Mateo19", email: "mateo19@example.com", password_digest: "password")
                                                 ^^^^^^
spec/models/answer_spec.rb:18:80: C: Style/HashSyntax: Use hash rockets syntax.
        user3 = User.create(username: "Mateo19", email: "mateo19@example.com", password_digest: "password")
                                                                               ^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:19:32: C: Style/HashSyntax: Use hash rockets syntax.
        topic_3 = Topic.create(name: "Gastronomía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                               ^^^^^
spec/models/answer_spec.rb:19:53: C: Style/HashSyntax: Use hash rockets syntax.
        topic_3 = Topic.create(name: "Gastronomía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                    ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:19:77: C: Style/HashSyntax: Use hash rockets syntax.
        topic_3 = Topic.create(name: "Gastronomía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                            ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:19:101: C: Style/HashSyntax: Use hash rockets syntax.
        topic_3 = Topic.create(name: "Gastronomía", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                                    ^^^^^^^^^^^^^^^^^^^^
spec/models/answer_spec.rb:20:38: C: Style/HashSyntax: Use hash rockets syntax.
        question_3 = Question.create(content: "¿De qué país es originario el Onigiri", topic: topic_3, level: 3)
                                     ^^^^^^^^
spec/models/answer_spec.rb:20:88: C: Style/HashSyntax: Use hash rockets syntax.
        question_3 = Question.create(content: "¿De qué país es originario el Onigiri", topic: topic_3, level: 3)
                                                                                       ^^^^^^
spec/models/answer_spec.rb:20:104: C: Style/HashSyntax: Use hash rockets syntax.
        question_3 = Question.create(content: "¿De qué país es originario el Onigiri", topic: topic_3, level: 3)
                                                                                                       ^^^^^^
spec/models/answer_spec.rb:21:35: C: Style/HashSyntax: Use hash rockets syntax.
        option_q3 = Option.create(content: "Japón", question: question_3)
                                  ^^^^^^^^
spec/models/answer_spec.rb:21:53: C: Style/HashSyntax: Use hash rockets syntax.
        option_q3 = Option.create(content: "Japón", question: question_3)
                                                    ^^^^^^^^^
spec/models/answer_spec.rb:22:40: C: Style/HashSyntax: Use hash rockets syntax.
        knowledge_3 = Knowledge.create(user: user3, topic: topic_3, level: 3)
                                       ^^^^^
spec/models/answer_spec.rb:22:53: C: Style/HashSyntax: Use hash rockets syntax.
        knowledge_3 = Knowledge.create(user: user3, topic: topic_3, level: 3)
                                                    ^^^^^^
spec/models/answer_spec.rb:22:69: C: Style/HashSyntax: Use hash rockets syntax.
        knowledge_3 = Knowledge.create(user: user3, topic: topic_3, level: 3)
                                                                    ^^^^^^
spec/models/answer_spec.rb:23:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user3, question: question_3, option: option_q3)
                            ^^^^^
spec/models/answer_spec.rb:23:42: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user3, question: question_3, option: option_q3)
                                         ^^^^^^^^^
spec/models/answer_spec.rb:23:64: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user3, question: question_3, option: option_q3)
                                                               ^^^^^^^
spec/models/answer_spec.rb:34:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(question: question_1, option: option_q1)
                            ^^^^^^^^^
spec/models/answer_spec.rb:34:51: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(question: question_1, option: option_q1)
                                                  ^^^^^^^
spec/models/answer_spec.rb:39:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, option: option_q1)
                            ^^^^^
spec/models/answer_spec.rb:39:41: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, option: option_q1)
                                        ^^^^^^^
spec/models/answer_spec.rb:44:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_1)
                            ^^^^^
spec/models/answer_spec.rb:44:41: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_1)
                                        ^^^^^^^^^
spec/models/answer_spec.rb:49:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_1, option: option_q2)
                            ^^^^^
spec/models/answer_spec.rb:49:41: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_1, option: option_q2)
                                        ^^^^^^^^^
spec/models/answer_spec.rb:49:63: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_1, option: option_q2)
                                                              ^^^^^^^
spec/models/answer_spec.rb:54:29: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_2, option: option_q2)
                            ^^^^^
spec/models/answer_spec.rb:54:41: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_2, option: option_q2)
                                        ^^^^^^^^^
spec/models/answer_spec.rb:54:63: C: Style/HashSyntax: Use hash rockets syntax.
        answer = Answer.new(user: user, question: question_2, option: option_q2)
                                                              ^^^^^^^
spec/models/knowledge_spec.rb:7:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "cargoOtroejemplo", email: "yoyfdsdsao@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:7:56: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "cargoOtroejemplo", email: "yoyfdsdsao@example.com", password: "password")
                                                       ^^^^^^
spec/models/knowledge_spec.rb:7:89: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "cargoOtroejemplo", email: "yoyfdsdsao@example.com", password: "password")
                                                                                        ^^^^^^^^^
spec/models/knowledge_spec.rb:8:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Biologiadfssda", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                           ^^^^^
spec/models/knowledge_spec.rb:8:52: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Biologiadfssda", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:8:76: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Biologiadfssda", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:8:100: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Biologiadfssda", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                                                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:9:33: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 1)
                                ^^^^^
spec/models/knowledge_spec.rb:9:45: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 1)
                                            ^^^^^^
spec/models/knowledge_spec.rb:9:59: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 1)
                                                          ^^^^^^
spec/models/knowledge_spec.rb:16:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Science")
                           ^^^^^
spec/models/knowledge_spec.rb:17:33: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(topic: topic, level: 2)
                                ^^^^^^
spec/models/knowledge_spec.rb:17:47: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(topic: topic, level: 2)
                                              ^^^^^^
spec/models/knowledge_spec.rb:23:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Alice", email: "alice@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:23:45: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Alice", email: "alice@example.com", password: "password")
                                            ^^^^^^
spec/models/knowledge_spec.rb:23:73: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Alice", email: "alice@example.com", password: "password")
                                                                        ^^^^^^^^^
spec/models/knowledge_spec.rb:24:33: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, level: 3)
                                ^^^^^
spec/models/knowledge_spec.rb:24:45: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, level: 3)
                                            ^^^^^^
spec/models/knowledge_spec.rb:30:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "yoyo", email: "bmmmmb@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:30:44: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "yoyo", email: "bmmmmb@example.com", password: "password")
                                           ^^^^^^
spec/models/knowledge_spec.rb:30:73: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "yoyo", email: "bmmmmb@example.com", password: "password")
                                                                        ^^^^^^^^^
spec/models/knowledge_spec.rb:31:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "uiui", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                           ^^^^^
spec/models/knowledge_spec.rb:31:42: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "uiui", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:31:66: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "uiui", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                                                 ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:31:90: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "uiui", amount_questions_L1: 3, amount_questions_L2: 5, amount_questions_L3: 2)
                                                                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:32:33: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 6)
                                ^^^^^
spec/models/knowledge_spec.rb:32:45: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 6)
                                            ^^^^^^
spec/models/knowledge_spec.rb:32:59: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.new(user: user, topic: topic, level: 6)
                                                          ^^^^^^
spec/models/knowledge_spec.rb:41:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Eve", email: "eve@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:41:43: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Eve", email: "eve@example.com", password: "password")
                                          ^^^^^^
spec/models/knowledge_spec.rb:41:69: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Eve", email: "eve@example.com", password: "password")
                                                                    ^^^^^^^^^
spec/models/knowledge_spec.rb:42:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "English", amount_questions_L1: 3)  # Set the required questions for level 1
                           ^^^^^
spec/models/knowledge_spec.rb:42:45: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "English", amount_questions_L1: 3)  # Set the required questions for level 1
                                            ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:43:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                   ^^^^^
spec/models/knowledge_spec.rb:43:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                               ^^^^^^
spec/models/knowledge_spec.rb:43:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 1)
                                                             ^^^^^^
spec/models/knowledge_spec.rb:63:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Nano", email: "nano@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:63:44: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Nano", email: "nano@example.com", password: "password")
                                           ^^^^^^
spec/models/knowledge_spec.rb:63:71: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Nano", email: "nano@example.com", password: "password")
                                                                      ^^^^^^^^^
spec/models/knowledge_spec.rb:64:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "History", amount_questions_L2: 3)
                           ^^^^^
spec/models/knowledge_spec.rb:64:45: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "History", amount_questions_L2: 3)
                                            ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:65:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, correct_answers_count: 1, level: 2)
                                   ^^^^^
spec/models/knowledge_spec.rb:65:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, correct_answers_count: 1, level: 2)
                                               ^^^^^^
spec/models/knowledge_spec.rb:65:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, correct_answers_count: 1, level: 2)
                                                             ^^^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:65:88: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, correct_answers_count: 1, level: 2)
                                                                                       ^^^^^^
spec/models/knowledge_spec.rb:74:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Frank", email: "frank@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:74:45: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Frank", email: "frank@example.com", password: "password")
                                            ^^^^^^
spec/models/knowledge_spec.rb:74:73: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Frank", email: "frank@example.com", password: "password")
                                                                        ^^^^^^^^^
spec/models/knowledge_spec.rb:75:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Art", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                           ^^^^^
spec/models/knowledge_spec.rb:75:41: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Art", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                        ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:75:65: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Art", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:75:89: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Art", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                        ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:76:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 4)
                                   ^^^^^
spec/models/knowledge_spec.rb:76:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 4)
                                               ^^^^^^
spec/models/knowledge_spec.rb:76:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 4)
                                                             ^^^^^^
spec/models/knowledge_spec.rb:86:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Grace", email: "grace@example.com", password: "password")
                         ^^^^^^^^^
spec/models/knowledge_spec.rb:86:45: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Grace", email: "grace@example.com", password: "password")
                                            ^^^^^^
spec/models/knowledge_spec.rb:86:73: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "Grace", email: "grace@example.com", password: "password")
                                                                        ^^^^^^^^^
spec/models/knowledge_spec.rb:87:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Music", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                           ^^^^^
spec/models/knowledge_spec.rb:87:43: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Music", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:87:67: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Music", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:87:91: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Music", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/knowledge_spec.rb:88:36: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3)
                                   ^^^^^
spec/models/knowledge_spec.rb:88:48: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3)
                                               ^^^^^^
spec/models/knowledge_spec.rb:88:62: C: Style/HashSyntax: Use hash rockets syntax.
      knowledge = Knowledge.create(user: user, topic: topic, level: 3)
                                                             ^^^^^^
spec/models/option_spec.rb:5:24: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Deportes", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                       ^^^^^
spec/models/option_spec.rb:5:42: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Deportes", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:5:66: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Deportes", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                                                 ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:5:90: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Deportes", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                                                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:6:30: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.create(content: "¿Cuántos jugadores tiene un equipo de basquet?", topic: topic, level: 2)
                             ^^^^^^^^
spec/models/option_spec.rb:6:89: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.create(content: "¿Cuántos jugadores tiene un equipo de basquet?", topic: topic, level: 2)
                                                                                        ^^^^^^
spec/models/option_spec.rb:6:103: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.create(content: "¿Cuántos jugadores tiene un equipo de basquet?", topic: topic, level: 2)
                                                                                                      ^^^^^^
spec/models/option_spec.rb:9:25: C: Style/HashSyntax: Use hash rockets syntax.
  topic2 = Topic.create(name: "Deportes de campo", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                        ^^^^^
spec/models/option_spec.rb:9:52: C: Style/HashSyntax: Use hash rockets syntax.
  topic2 = Topic.create(name: "Deportes de campo", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:9:76: C: Style/HashSyntax: Use hash rockets syntax.
  topic2 = Topic.create(name: "Deportes de campo", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:9:100: C: Style/HashSyntax: Use hash rockets syntax.
  topic2 = Topic.create(name: "Deportes de campo", amount_questions_L1: 5, amount_questions_L2: 5, amount_questions_L3: 3)
                                                                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/option_spec.rb:10:31: C: Style/HashSyntax: Use hash rockets syntax.
  question2 = Question.create(content: "¿Cuántos jugadores tiene un equipo de hockey?", topic: topic2, level: 2)
                              ^^^^^^^^
spec/models/option_spec.rb:10:89: C: Style/HashSyntax: Use hash rockets syntax.
  question2 = Question.create(content: "¿Cuántos jugadores tiene un equipo de hockey?", topic: topic2, level: 2)
                                                                                        ^^^^^^
spec/models/option_spec.rb:10:104: C: Style/HashSyntax: Use hash rockets syntax.
  question2 = Question.create(content: "¿Cuántos jugadores tiene un equipo de hockey?", topic: topic2, level: 2)
                                                                                                       ^^^^^^
spec/models/option_spec.rb:11:23: C: Style/HashSyntax: Use hash rockets syntax.
  option = Option.new(content: "7", question: question2)
                      ^^^^^^^^
spec/models/option_spec.rb:11:37: C: Style/HashSyntax: Use hash rockets syntax.
  option = Option.new(content: "7", question: question2)
                                    ^^^^^^^^^
spec/models/option_spec.rb:18:25: C: Style/HashSyntax: Use hash rockets syntax.
    option = Option.new(question: question)
                        ^^^^^^^^^
spec/models/option_spec.rb:23:55: C: Style/HashSyntax: Use hash rockets syntax.
    question_for_destroy = question = Question.create(content: "¿Cuántos jugadores tiene un equipo de rugby?", topic: topic, level: 2)
                                                      ^^^^^^^^
spec/models/option_spec.rb:23:112: C: Style/HashSyntax: Use hash rockets syntax.
    question_for_destroy = question = Question.create(content: "¿Cuántos jugadores tiene un equipo de rugby?", topic: topic, level: 2)
                                                                                                               ^^^^^^
spec/models/option_spec.rb:23:126: C: Style/HashSyntax: Use hash rockets syntax.
    question_for_destroy = question = Question.create(content: "¿Cuántos jugadores tiene un equipo de rugby?", topic: topic, level: 2)
                                                                                                                             ^^^^^^
spec/models/option_spec.rb:26:25: C: Style/HashSyntax: Use hash rockets syntax.
    option = Option.new(content: "7", question_id: id_before_destroy)
                        ^^^^^^^^
spec/models/option_spec.rb:26:39: C: Style/HashSyntax: Use hash rockets syntax.
    option = Option.new(content: "7", question_id: id_before_destroy)
                                      ^^^^^^^^^^^^
spec/models/question_spec.rb:6:24: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                       ^^^^^
spec/models/question_spec.rb:6:42: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:6:66: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                 ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:6:90: C: Style/HashSyntax: Use hash rockets syntax.
  topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                         ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:9:27: C: Style/HashSyntax: Use hash rockets syntax.
    topic2 = Topic.create(name: "Historia Argentina", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                          ^^^^^
spec/models/question_spec.rb:9:55: C: Style/HashSyntax: Use hash rockets syntax.
    topic2 = Topic.create(name: "Historia Argentina", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:9:79: C: Style/HashSyntax: Use hash rockets syntax.
    topic2 = Topic.create(name: "Historia Argentina", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                              ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:9:103: C: Style/HashSyntax: Use hash rockets syntax.
    topic2 = Topic.create(name: "Historia Argentina", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:10:29: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la revolución de Mayo?", topic: topic2, level: 1)
                            ^^^^^^^^
spec/models/question_spec.rb:10:76: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la revolución de Mayo?", topic: topic2, level: 1)
                                                                           ^^^^^^
spec/models/question_spec.rb:10:91: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la revolución de Mayo?", topic: topic2, level: 1)
                                                                                          ^^^^^^
spec/models/question_spec.rb:16:29: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(topic: topic, level: 1)
                            ^^^^^^
spec/models/question_spec.rb:16:43: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(topic: topic, level: 1)
                                          ^^^^^^
spec/models/question_spec.rb:21:36: C: Style/HashSyntax: Use hash rockets syntax.
  topic_for_destroy = Topic.create(name: "Ciencias Naturales", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                   ^^^^^
spec/models/question_spec.rb:21:64: C: Style/HashSyntax: Use hash rockets syntax.
  topic_for_destroy = Topic.create(name: "Ciencias Naturales", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                               ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:21:88: C: Style/HashSyntax: Use hash rockets syntax.
  topic_for_destroy = Topic.create(name: "Ciencias Naturales", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                       ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:21:112: C: Style/HashSyntax: Use hash rockets syntax.
  topic_for_destroy = Topic.create(name: "Ciencias Naturales", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                                               ^^^^^^^^^^^^^^^^^^^^
spec/models/question_spec.rb:24:27: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.new(content: "¿Cuándo fue la 2da Guerra Mundial?", topic_id: id_before_destroy, level: 1)
                          ^^^^^^^^
spec/models/question_spec.rb:24:74: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.new(content: "¿Cuándo fue la 2da Guerra Mundial?", topic_id: id_before_destroy, level: 1)
                                                                         ^^^^^^^^^
spec/models/question_spec.rb:24:103: C: Style/HashSyntax: Use hash rockets syntax.
  question = Question.new(content: "¿Cuándo fue la 2da Guerra Mundial?", topic_id: id_before_destroy, level: 1)
                                                                                                      ^^^^^^
spec/models/question_spec.rb:29:29: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 3ra Guerra Mundial?", topic: topic, level: -2)
                            ^^^^^^^^
spec/models/question_spec.rb:29:76: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 3ra Guerra Mundial?", topic: topic, level: -2)
                                                                           ^^^^^^
spec/models/question_spec.rb:29:90: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 3ra Guerra Mundial?", topic: topic, level: -2)
                                                                                         ^^^^^^
spec/models/question_spec.rb:34:29: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 4ta Guerra Mundial?", topic: topic, level: 4)
                            ^^^^^^^^
spec/models/question_spec.rb:34:76: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 4ta Guerra Mundial?", topic: topic, level: 4)
                                                                           ^^^^^^
spec/models/question_spec.rb:34:90: C: Style/HashSyntax: Use hash rockets syntax.
    question = Question.new(content: "¿Cuándo fue la 4ta Guerra Mundial?", topic: topic, level: 4)
                                                                                         ^^^^^^
spec/models/question_spec.rb:39:33: C: Style/HashSyntax: Use hash rockets syntax.
    question1 = Question.create(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 1)
                                ^^^^^^^^
spec/models/question_spec.rb:39:80: C: Style/HashSyntax: Use hash rockets syntax.
    question1 = Question.create(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 1)
                                                                               ^^^^^^
spec/models/question_spec.rb:39:94: C: Style/HashSyntax: Use hash rockets syntax.
    question1 = Question.create(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 1)
                                                                                             ^^^^^^
spec/models/question_spec.rb:40:30: C: Style/HashSyntax: Use hash rockets syntax.
    question2 = Question.new(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 2)
                             ^^^^^^^^
spec/models/question_spec.rb:40:77: C: Style/HashSyntax: Use hash rockets syntax.
    question2 = Question.new(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 2)
                                                                            ^^^^^^
spec/models/question_spec.rb:40:91: C: Style/HashSyntax: Use hash rockets syntax.
    question2 = Question.new(content: "¿Cuándo fue la 5ta Guerra Mundial?", topic: topic, level: 2)
                                                                                          ^^^^^^
spec/models/topic_spec.rb:6:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Paleontología", amount_questions_L1: 0, amount_questions_L2: 2, amount_questions_L3: 1)
                      ^^^^^
spec/models/topic_spec.rb:6:46: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Paleontología", amount_questions_L1: 0, amount_questions_L2: 2, amount_questions_L3: 1)
                                             ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:6:70: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Paleontología", amount_questions_L1: 0, amount_questions_L2: 2, amount_questions_L3: 1)
                                                                     ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:6:94: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Paleontología", amount_questions_L1: 0, amount_questions_L2: 2, amount_questions_L3: 1)
                                                                                             ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:11:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(amount_questions_L1: 0, amount_questions_L2: 0, amount_questions_L3: 0)
                      ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:11:47: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(amount_questions_L1: 0, amount_questions_L2: 0, amount_questions_L3: 0)
                                              ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:11:71: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(amount_questions_L1: 0, amount_questions_L2: 0, amount_questions_L3: 0)
                                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:16:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L2: 0, amount_questions_L3: 1)
                      ^^^^^
spec/models/topic_spec.rb:16:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L2: 0, amount_questions_L3: 1)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:16:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L2: 0, amount_questions_L3: 1)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:21:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L3: 0)
                      ^^^^^
spec/models/topic_spec.rb:21:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L3: 0)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:21:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L3: 0)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:26:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 0, amount_questions_L3: 1)
                      ^^^^^
spec/models/topic_spec.rb:26:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 0, amount_questions_L3: 1)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:26:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 0, amount_questions_L3: 1)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:31:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: -1, amount_questions_L2: 1, amount_questions_L3: 0)
                      ^^^^^
spec/models/topic_spec.rb:31:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: -1, amount_questions_L2: 1, amount_questions_L3: 0)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:31:68: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: -1, amount_questions_L2: 1, amount_questions_L3: 0)
                                                                   ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:31:92: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: -1, amount_questions_L2: 1, amount_questions_L3: 0)
                                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:36:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: -1, amount_questions_L3: 0)
                      ^^^^^
spec/models/topic_spec.rb:36:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: -1, amount_questions_L3: 0)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:36:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: -1, amount_questions_L3: 0)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:36:92: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: -1, amount_questions_L3: 0)
                                                                                           ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:41:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: -5)
                      ^^^^^
spec/models/topic_spec.rb:41:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: -5)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:41:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: -5)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:41:91: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 1, amount_questions_L2: 1, amount_questions_L3: -5)
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:46:35: C: Style/HashSyntax: Use hash rockets syntax.
    existing_topic = Topic.create(name: "Matematica", amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                  ^^^^^
spec/models/topic_spec.rb:46:55: C: Style/HashSyntax: Use hash rockets syntax.
    existing_topic = Topic.create(name: "Matematica", amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:46:79: C: Style/HashSyntax: Use hash rockets syntax.
    existing_topic = Topic.create(name: "Matematica", amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                              ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:46:103: C: Style/HashSyntax: Use hash rockets syntax.
    existing_topic = Topic.create(name: "Matematica", amount_questions_L1: 2, amount_questions_L2: 2, amount_questions_L3: 2)
                                                                                                      ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:47:23: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                      ^^^^^
spec/models/topic_spec.rb:47:43: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:47:67: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                  ^^^^^^^^^^^^^^^^^^^^
spec/models/topic_spec.rb:47:91: C: Style/HashSyntax: Use hash rockets syntax.
    topic = Topic.new(name: "Matematica", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                          ^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:8:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Martincito28", email: "martinp@example.com", password_digest: "password")
                    ^^^^^^^^^
spec/models/user_spec.rb:8:47: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Martincito28", email: "martinp@example.com", password_digest: "password")
                                              ^^^^^^
spec/models/user_spec.rb:8:77: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Martincito28", email: "martinp@example.com", password_digest: "password")
                                                                            ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:13:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(email: "roman10@example.com", password_digest: "password")
                    ^^^^^^
spec/models/user_spec.rb:13:51: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(email: "roman10@example.com", password_digest: "password")
                                                  ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:18:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "RR10", password_digest: "password")
                    ^^^^^^^^^
spec/models/user_spec.rb:18:39: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "RR10", password_digest: "password")
                                      ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:23:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "RR10", email: "roman10@gmail.com")
                    ^^^^^^^^^
spec/models/user_spec.rb:23:39: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "RR10", email: "roman10@gmail.com")
                                      ^^^^^^
spec/models/user_spec.rb:28:33: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                ^^^^^^^^^
spec/models/user_spec.rb:28:54: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                                     ^^^^^^
spec/models/user_spec.rb:28:82: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                                                                 ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:29:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "argento", email: "messi@example.com", password_digest: "password")
                    ^^^^^^^^^
spec/models/user_spec.rb:29:42: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "argento", email: "messi@example.com", password_digest: "password")
                                         ^^^^^^
spec/models/user_spec.rb:29:70: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "argento", email: "messi@example.com", password_digest: "password")
                                                                     ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:35:33: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                ^^^^^^^^^
spec/models/user_spec.rb:35:55: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                                      ^^^^^^
spec/models/user_spec.rb:35:84: C: Style/HashSyntax: Use hash rockets syntax.
    existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                                                                   ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:36:21: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Marcos10", email: "otromail@example.com", password_digest: "password")
                    ^^^^^^^^^
spec/models/user_spec.rb:36:43: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Marcos10", email: "otromail@example.com", password_digest: "password")
                                          ^^^^^^
spec/models/user_spec.rb:36:74: C: Style/HashSyntax: Use hash rockets syntax.
    user = User.new(username: "Marcos10", email: "otromail@example.com", password_digest: "password")
                                                                         ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:44:35: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                  ^^^^^^^^^
spec/models/user_spec.rb:44:57: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                                        ^^^^^^
spec/models/user_spec.rb:44:86: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Marcos10", email: "marcos@example.com", password_digest: "password")
                                                                                     ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:58:35: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                  ^^^^^^^^^
spec/models/user_spec.rb:58:56: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                                       ^^^^^^
spec/models/user_spec.rb:58:84: C: Style/HashSyntax: Use hash rockets syntax.
      existing_user = User.create(username: "Messi10", email: "messi@example.com", password_digest: "password")
                                                                                   ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:101:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "user_test", email: "user@test.com", password_digest: "password")
                         ^^^^^^^^^
spec/models/user_spec.rb:101:49: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "user_test", email: "user@test.com", password_digest: "password")
                                                ^^^^^^
spec/models/user_spec.rb:101:73: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: "user_test", email: "user@test.com", password_digest: "password")
                                                                        ^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:102:28: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                           ^^^^^
spec/models/user_spec.rb:102:46: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                             ^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:102:70: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                     ^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:102:94: C: Style/HashSyntax: Use hash rockets syntax.
      topic = Topic.create(name: "Historia", amount_questions_L1: 3, amount_questions_L2: 3, amount_questions_L3: 3)
                                                                                             ^^^^^^^^^^^^^^^^^^^^
spec/models/user_spec.rb:110:39: C: Style/HashSyntax: Use hash rockets syntax.
        knowledge = Knowledge.find_by(user: user, topic: topic)
                                      ^^^^^
spec/models/user_spec.rb:110:51: C: Style/HashSyntax: Use hash rockets syntax.
        knowledge = Knowledge.find_by(user: user, topic: topic)
                                                  ^^^^^^
spec/models/user_spec.rb:126:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user1', email: 'test1@example.com', password: 'password123')
                         ^^^^^^^^^
spec/models/user_spec.rb:126:50: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user1', email: 'test1@example.com', password: 'password123')
                                                 ^^^^^^
spec/models/user_spec.rb:126:78: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user1', email: 'test1@example.com', password: 'password123')
                                                                             ^^^^^^^^^
spec/models/user_spec.rb:137:26: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user2', email: 'test2@example.com', password: 'password123')
                         ^^^^^^^^^
spec/models/user_spec.rb:137:50: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user2', email: 'test2@example.com', password: 'password123')
                                                 ^^^^^^
spec/models/user_spec.rb:137:78: C: Style/HashSyntax: Use hash rockets syntax.
      user = User.create(username: 'test_user2', email: 'test2@example.com', password: 'password123')
                                                                             ^^^^^^^^^
spec/models/user_spec.rb:153:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: 0)
                        ^^^^^^^
spec/models/user_spec.rb:159:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: 2)
                        ^^^^^^^
spec/models/user_spec.rb:165:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: -4)
                        ^^^^^^^
spec/models/user_spec.rb:173:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: 0)
                        ^^^^^^^
spec/models/user_spec.rb:179:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: -5)
                        ^^^^^^^
spec/models/user_spec.rb:185:25: C: Style/HashSyntax: Use hash rockets syntax.
        user = User.new(streak: 5)
                        ^^^^^^^

56 files inspected, 950 offenses detected, 950 offenses auto-correctable
